(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    220360,       4245]
NotebookOptionsPosition[    214788,       4154]
NotebookOutlinePosition[    215188,       4170]
CellTagsIndexPosition[    215145,       4167]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Physics\t", "Title",
 CellChangeTimes->{{3.8007548742022552`*^9, 
  3.8007548859839735`*^9}},ExpressionUUID->"17df7a88-de31-41bc-a59a-\
6ba3ccf93162"],

Cell["The Harmonic Oscillator (2.3)", "Subtitle",
 CellChangeTimes->{{3.8007548896330385`*^9, 
  3.8007549065438213`*^9}},ExpressionUUID->"bcf7317d-5b6d-4136-af70-\
0a2f670d5b31"],

Cell["William Arnold", "Subsubtitle",
 CellChangeTimes->{{3.800754896305092*^9, 
  3.8007548991288133`*^9}},ExpressionUUID->"c1dae2e9-c1ee-4af7-bce9-\
d5328bcb1f3a"],

Cell["Let\[CloseCurlyQuote]s set up the stationary states", "Text",
 CellChangeTimes->{{3.800755797149147*^9, 
  3.8007558139419975`*^9}},ExpressionUUID->"6f2624b4-d993-4cb9-9737-\
95f5b4514ef0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", " ", "t", ",", " ", "m", ",", " ", "\[Omega]", ",", " ", 
       "\[HBar]"}], "}"}], " ", "\[Element]", " ", 
     TemplateBox[{},
      "Reals"]}], " ", "&&", " ", 
    RowBox[{"t", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
    RowBox[{"n", " ", "\[Element]", " ", 
     TemplateBox[{},
      "Integers"]}], " ", "&&", " ", 
    RowBox[{"n", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Omega]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"m", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[HBar]", " ", ">", " ", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", " ", 
       RowBox[{"\[Omega]", " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", " ", "\[HBar]"}], ")"}]}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", " ", "m"}], " ", "\[Omega]", " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "/", " ", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[HBar]"}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "f_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "\[HBar]", " ", 
    RowBox[{"D", "[", 
     RowBox[{"f", ",", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aplus", "[", "f_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "\[HBar]", " ", "m", " ", "\[Omega]"}], "]"}]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", " ", "\[ImaginaryI]"}], " ", 
       RowBox[{"pop", "[", "f", "]"}]}], " ", "+", " ", 
      RowBox[{"m", " ", "\[Omega]", " ", "x", " ", "f"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"Factorial", "[", "n", "]"}]}], "]"}], " ", 
     RowBox[{"Nest", "[", 
      RowBox[{"aplus", ",", " ", "p0", ",", " ", "n"}], "]"}]}], " ", "//", 
    " ", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "[", "n_", "]"}], " ", ":=", "  ", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", " ", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{"n", " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], ")"}], " ", 
    RowBox[{"t", " ", "/", " ", "\[HBar]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FixConstants", "[", "f_", "]"}], " ", ":=", " ", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", "f", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[HBar]", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"m", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"\[Omega]", " ", "->", " ", "1"}], ",", " ", 
       RowBox[{"\[Pi]", " ", "\[Rule]", " ", "1"}]}], "}"}], ",", " ", 
     "50000"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalPsi]", "n"], "[", 
   RowBox[{"x_", ",", " ", "t_", ",", " ", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "n", "]"}], 
     RowBox[{"\[Phi]", "[", "n", "]"}]}], " ", "//", " ", "Simplify"}], " ", "//",
    " ", "FixConstants"}]}]}], "Code",
 CellChangeTimes->{{3.8007549180309906`*^9, 3.8007549220274363`*^9}, {
  3.8007557351001787`*^9, 3.8007557489909983`*^9}, {3.800755864438669*^9, 
  3.800755870572571*^9}, {3.8007559675100875`*^9, 3.8007560147239933`*^9}, {
  3.8007569022076545`*^9, 3.8007569143952856`*^9}, {3.800756965341724*^9, 
  3.800756971291588*^9}, {3.8007573693085012`*^9, 3.8007574071651077`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"c09ce1ab-9d5b-44cc-bc61-fef199709b1a"],

Cell["Now we can plot some functions, we\[CloseCurlyQuote]ll start with this \
one:", "Text",
 CellChangeTimes->{{3.8007557579999285`*^9, 3.8007557637402487`*^9}, {
  3.800755845411667*^9, 
  3.8007558586364546`*^9}},ExpressionUUID->"6f9e3aa8-9380-4b88-99ac-\
74822ba2f1b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"x_", ",", " ", "t_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Sqrt]", "3"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "n"], "[", 
        RowBox[{"x", ",", " ", "t", ",", " ", "2"}], "]"}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "n"], "[", 
        RowBox[{"x", ",", " ", "t", ",", " ", "3"}], "]"}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalPsi]", "n"], "[", 
        RowBox[{"x", ",", " ", "t", ",", " ", "4"}], "]"}]}], ")"}]}], " ", "//",
     " ", "Simplify"}]}], ";"}], "\n", 
 RowBox[{"ComplexPlot", "[", 
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ",", " ", 
     RowBox[{"Im", "[", "z", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"z", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", 
     RowBox[{"4", " ", "+", " ", 
      RowBox[{"4", " ", "\[Pi]", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", "Automatic"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.800755881612756*^9, 3.8007559663084774`*^9}, {
  3.8007560248689375`*^9, 3.800756064645156*^9}, {3.8007561015955935`*^9, 
  3.800756250084251*^9}, {3.8007563956510696`*^9, 3.8007564178693843`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"02416396-69ef-4054-ab29-4933400a6915"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxd2U/oJ3Udx/FfOrDGYq0lpUbZNNM4gtXBJdAQh7CgyxaVUJdoFQNPiQQe
9hJlUAdBtj/HqFNQQnboEIWNQn9ID0KHwNXqUgcn9pCC2gi1v993Hu+Y117c
J/7Yz2+/Dz6f3X2/2/u++tkHrjo6Onr06qOj4/8efpyZ/eyxJ1/88zXPXlt9
0/lf/eS6H5yuvhIXbjr/1uqzzzz86e62U9VPH+drTfW5K3X2mauqL1351e96
7Kj6+eN88s3f6pcffPQfP/zk69XN8f9+8ZXqu75w+cpXXK5++OQb/Gf1ueNv
98IL1Q9dOP6Cp6t/c+i79dcOX1/9rcOvV/2Zw3nVbzt8P9WvHr7f6hcOv5/q
vx9+v5P+3OHzqP794fOqvuPweVY/cfi8q28+eFRfPHhVH36cyZ5funjHy4//
+tLdfDVfzVfz1Xw1X81X89V8NV/NV/Ot8zZfzVfz1Xw1X81X89V8NV/NV/PV
fDVfzVfz1Xw13+jt817CdwnfJXyX8F3CdwnfJXyX8F3CdwnfJXyX8F3Cdwnf
JXyX8F3CdwnfJXyX8F3CdwnfJXyX8F3CdwnfJXyX8F3Ct3oePvyznz/x3Kvl
q/lqvpqv5qv5ar6ar+ar+Wq+mm+dt/lqvpqv5qv5ar6ar+ar+Wq+mq/mq/lq
vpqv5qv5Rm/3aY37u8b9XeP+rnF/17i/a9zfNe7vGvd3jfu7xv1d4/6ucX/X
uL9r3N817u8a93eN+7vG/V3j/q5xf9e4v2vc3zXu7xr3d437u8b9XeP+rnF/
17i/1fOf1vsv3nnvWya+mq/mq/lqvpqv5qv5ar6ar+ar+dZ5m6/mq/lqvpqv
5qv5ar6ar+ar+Wq+mq/mq/lqvppv9PZeNtP+fW6m/fvcTPv3uZn273Mz7d/n
Ztq/z820f5+baf8+N9P+fW6m/fvcTPv3uZn273Mz7d/nZtq/z820f5+baf8+
N9P+fW6m/fvcTPv3uZn273Mz7d/nZtq/z820f5+baf8+N9P+fW6m/fvcTPv3
uZn273Mz7d/n6vkbX/73c++755ry1Xw1X81X89V8NV/NV/PVfDVfzbfO23w1
X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8o+e/nrzXp8tX89V8NV/NV/PV
fDVfzVfz1Xw13zpv89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NV/ONnu/8
3ddPXX3728tX89V8NV/NV/PVfDVfzVfz1Xw13zpv89V8NV/NV/PVfDVfzVfz
1Xw1X81X89V8NV/NV/ONnp89+fP4uvLVfDVfzVfz1Xw1X81X89V8NV/Nt87b
fDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xyj5ze+d+rHr5x5Z/lqvpqv
5qv5ar6ar+ar+Wq+mq/mW+dtvpqv5qv5ar6ar+ar+Wq+mq/mq/lqvpqv5qv5
ar7R8y0nf9+6vnw1X81X89V8NV/NV/PVfDVfzVfzrfM2X81X89V8NV/NV/PV
fDVfzVfz1Xw1X81X89V8Nd/o+d4/nHvqgW+/q3w1X81X89V8NV/NV/PVfDVf
zVfzrfM2X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8Nd/o+Zsnf5++oXw1
X81X89V8NV/NV/PVfDVfzVfzrfM2X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X
89V8Nd/o+RdvfP/SX/57Y/lqvpqv5qv5ar6ar+ar+Wq+mq/mW+dtvpqv5qv5
ar6ar+ar+Wq+mq/mq/lqvpqv5qv5ar7R899O/r30nvLVfDVfzVfz1Xw1X81X
89V8NV/Nt87bfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xyj52tve+n1
Tz3y3vLVfDVfzVfz1Xw1X81X89V8NV/Nt87bfDVfzVfz1Xw1X81X89V8NV/N
V/PVfDVfzVfz1Xyj54+d/Hv45vLVfDVfzVfz1Xw1X81X89V8NV/Nt87bfDVf
zVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xyj57MfecfpLz3y/vLVfDVfzVfz
1Xw1X81X89V8NV/Nt87bfDVfzVfz1Xw1X81X89V8NV/NV/PVfDVfzVfz1Xyj
t3lSG/OrNuZXbcyv2phftTG/amN+1cb8qo35VRvzqzbmV23Mr9qYX7Uxv2pj
ftXG/KqN+VUb86s25ldtzK/amF+1Mb9qY37VxvyqjflVG/OrNuZXbcyv2phf
tTG/qp7v++Mvb3z37R8oX81X89V8NV/NV/PVfDVfzVfz1XzrvM1X89V8NV/N
V/PVfDVfzVfz1Xw1X81X89V8NV/NN3qbF3Yxn+xiPtnFfLKL+WQX88ku5pNd
zCe7mE92MZ/sYj7ZxXyyi/lkF/PJLuaTXcwnu5hPdjGf7GI+2cV8sov5ZBfz
yS7mk13MJ7uYT3Yxn+xiPtnFfLKL+WQX88nq+fHzXxyfv/x/X81X89V8NV/N
V/PVfDVfzVfz1XzrvM1X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8NV/NN3qb
B/cxf+5j/tzH/LmP+XMf8+c+5s99zJ/7mD/3MX/uY/7cx/y5j/lzH/PnPubP
fcyf+5g/9zF/7mP+3Mf8uY/5cx/z5z7mz33Mn/uYP/cxf+5j/tzH/LmP+XMf
8+fq+an/vPnR7/z0g+Wr+Wq+mq/mq/lqvpqv5qv5ar6ab523+Wq+mq/mq/lq
vpqv5qv5ar6ar+ar+Wq+mq/mq/lGb/P+IfYLQ+wXhtgvDLFfGGK/MMR+YYj9
whD7hSH2C0PsF4bYLwyxXxhivzDEfmGI/cIQ+4Uh9gtD7BeG2C8MsV8YYr8w
xH5hiP3CEPuFIfYLQ+wXhtgvDLFfGMo3ev7Xd3/0iY9/5Zby1Xw1X81X89V8
NV/NV/PVfDVfzbfO23w1X81X89V8NV/NV/PVfDVfzVfz1Xw1X81X89V8o7d9
zhj7ozH2R2Psj8bYH42xPxpjfzTG/miM/dEY+6Mx9kdj7I/G2B+NsT8aY380
xv5ojP3RGPujMfZHY+yPxtgfjbE/GmN/NMb+aIz90Rj7ozH2R2Psj8bYH43l
Gz3f8KF7Pr+2t5av5qv5ar6ar+ar+Wq+mq/mq/lqvnXe5qv5ar6ar+ar+Wq+
mq/mq/lqvpqv5qv5ar6ar+ar/wdwAwzk
      "], {{{
         EdgeForm[], 
         Directive[
          Opacity[1.], 
          Texture[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJxMu2dwG1maJTrx3p/388V7u/t2dmZi3M60q+6etlPV1WW6nFQqqUree28p
iRIlkTJ0okSKnqIRRSN67w1IECAAwhKE9957ZCK9RZIdD1TPbGzEASIzkQhc
3HO/7zvn3rz/eP72/sv/x1/91V/d+79yb/vPPfxTfv65wgP/d+7kUN69a1fy
Ll38Nu/+pSuX8j88/3/mLjb8x2v7OP3DjvTeb9P7dwEHdwOHfwCO7gNOHARP
HQHPHc9cPJW5ci5z4yJ0+yp07xb88C78uAApLkTKn6IvStFXFVhdFdZYgzXX
461N+Jtm/G0r3tmGd73Bu9r/A51v8I5WvL05dwP2ug6rr0arX+S+i5Q+hh8/
gAtuQ7evZa5fyFw8DZ49Bp48BBzfv92AHI7tB3PNOHMUvHAqc/U8lHcVup8H
F95Hnv3nr1c9zzVgG5XlSEUJUlwEP8yHbl3OfSX3jz6RaA+ozFd0jiKr95Ur
2OaL9oXiY5HUTCy9mACWkyA/mVlJZnLvS0lwIQ5MxdJD4WSHP1btCt4zuQ+q
zOldX0B5V9Cal0RfNzU/TYsEjErO6jRZszFrs2adDs7t4rxuzufl/D4u8J/w
v0fuotfDedyc25l12rN2a9ZqzpoMrF7LatSMSsHI1mixkF5ZohZmyalxcmSA
6O3K9R72uj73i+j23ymEH+VD+Tdz/yhz9Rx44eR2V5w4mOsZsuYjsvZjsu4T
sv4zsvFPVNNXVPMOqmUX1baHat9HdR6iu4/RPafo/vP04GV65AYzdpuZvM9M
P2LmnjALJSzvObv0kuW/YldqWEEdK2xghY2ssIkVvAe/kVluYBbrmLkaeqqK
GqugBkrJrqdEyyPsVa7zb0N3boFX76TPPEgefhL/vjy681Xkq9rIl3XRb2pi
u18mDpamThUBlwsyeXfgwttY5T389QOyq4gaeEKPPWWmnzHzT1heYXb5flZw
Iys+Q8j2J/WfLrg/OGe9ddY0cceke2b1NVmjvfbUuBOcd0N8LyLyYWt+TObH
ZX5C5iOkHkLsIgQ2YtGIT6zj74R43QhZU4GbPhSBN55ijZXUVDcjnmI1K1mz
lHOqOa9+M2DeDNs2o47NmGsr7t5KeN7D+x5/OXZvxV1bMedm1L4ZsW6GzZtB
w6Zft+lVb7qVnFPK2VY583JWP5fdmMgqh1jpO3a1jeE3MAuVzHQJPVZID92l
eq9TXReo9lNk6xHy9X6y4XuydhdR/Q289K/w8o+R5Z8i/A+QlV8igl+jwt+h
qx+ioj+i4s+xta8w6be4fA+u2I+rjhDrJ4mNc6TmMqm7TupvU4Z7lPEhbSqi
zc9oSwljKWMszxlLBWt5wZpfsKYXWWNFVl/OaUs5dTGneJoVP2aXHzEzD+jB
+8SbfKzyDlxwJ5NXCFwpS52rTp5qShxvix97m0PiRHvyTEvqQj1w7WXmTjH8
8AH68h7x5j49fJ+dv58V3eOU+YwmnzTexay3Ief1lPdCOHxEH9o34d9T6jmX
56q+Y597bDNWWUIdxtSIEZo1octmYtVCrVlomZVRWFmlJasyZ5XGrELLStdZ
8RqzssQsjNDT9aQoL+7fN5d5UEV01TIr3VnNBGdb2vSKt0LKrZhmK2HYSpv/
DFj/DNr+nHH8GXJuA/5fyF2x/xnKfWT9c8a8BRq3AN1WWrOVUm0l5VtxyWZU
sBnhbQZnN/3jnHeAc3Vx9paspTbXV6zuCbtxn1XdYOQXmLUTtOggLdxD83dQ
S19QvE+ohQ/J+d/a7f+vw/5fHfb/z+n4H07H37mc/+By/rPb9SOP62de9y+9
nt/6vB/5vZ8GfF8G/TtDge/DwQOR4NFo6FQsfD4evpKI3EhGbqci+aloQTr6
CIgUAZHHYPhJJofgEyjwGPYVIu6HqKMAt+TnKGbWb3GSG+z8LXrwDtGSj5YX
wEVPoIcvMgV14P1msOANWPAWfNABPmzPFLZCjxvhp6+QklKs+jHZ+YgZz8XR
HVZ1izDcgh03Af+NeOSqL3bVGLsmjV6bjlxtC92qCzwv9bcVeafKXKoKh++N
MTGggabU+KKaFqhZ6Qar0rAabTaX2AwbWaM6a1RmDVJWJ2A184xmlNS+RUwV
Cd9NQ+rGEFJZR029zqrebdrHtgLzmzHhZkq6Cag2M1oONnCIiUMtHGblMBuH
2/8TuWNbFrdmcUsWN2UxA4vpWHSDRVQMImdgCQ0JqcwSBcyR6QkiNYQnurFY
GxqpR0Iv4MDTjK8A9NwEXBfSjuMp2/6kdVfc/GXc9EnM+O9R/a8i+p9HdD9p
sf11q+1v2ux/98b+9+32f+pw/EuX88fdzg96XP/W5/7toOfDYc8no94/Tfi+
mfZ/NxvYuxA8tBQ6zg+fFkYuiCJX1qLXZbE8ReyOKn5PHb+viRfoEg8MiQJT
4r41cc8Rv+OJ3wrErkWjlxLBi4D7ImK+SKovcpJL7Owtqv8+0VaE1RajlS+Q
qlqk+jVS04rWvkHr29H6NrShGWusx1teEV0vqOFSZu4xJ7lHa24htusp/5Vg
7KIpR1Msbz6a3xst6I68ao+0NYX7XoanqgOrdT5dndvfYUkMaqEJJTEvY1Zl
rFzGqmWsXsaaZKxFmrVJWKeYcQkpD5/0zmO+cTjQA4QbIrEKU/rpMlzVQ7xr
YsVvNq3vuMAoG59jgBUGkjCIgsHUDKFlSD1DGhnKxFBmhjbT/wmKNlG0kaQN
JK0jKA1OqTFSiZIyhJDAhBDCl0BsDkAnU8hwAu6JZdrDYGMQqPSlStzJh474
LWv0ojlywhDarw3uUvu/UPk+Vnh/K/P8Ys39E7HrX1ad/3DS9PUp0zdnzDvP
mnedt+y+aPn+inXfNduBm/bDt+3H8h2nCpxnC10Xn7ivlHhulHtvv/Tlv/I/
qAsUNgYfN4eetYZK2sNlHeHyrkh5d6TsXaS0J/qsJ1rYF7k/FLk7HsmbjVxf
jlySRs7qw8e94YNxzxHIdIpSnc+uXmfnC+iJZ9RwBTlYTQ40kAPN5GAbOdxO
jr6lxtupqTf0bAuz2Mjya7KSCk79mDLeh5234uFL1uglcfT6aOROd6S8M9La
Hu1vjk43RfhtYUV70Nge8HR4YwNWYFyHTCspnpQRSRiFiNUIWYOAtQkYt4Dy
CYjgCh5ZRmMLcGI6kxxNpQfCQLcr06aFX6+ibRN4dwcjaN80vWX9vXR8lARn
CWSJwIU4ubbd/5QapbQIpUdoI0ybYNoMvUeGNoO0CaCNacqQovRJShsn1TFS
FSHkIVzix1e92LILnbcjU2Z4RJ/p3QDfKoGmtdQrYaKMFy+cjd4ZD18ZCp3p
DRzu8H3f5t3R5Pm8zvWHV87fvnD8stz+0xLbj/5gePhHw6NPDEWfGR9/YXz6
lenZDnPJLnPZHsvzfdaXh2xVR+3Vpxx155yNl1yvr7lb8zxv8r0dD3xdRf53
T/29JYG+8mD/i2B/ZWjgVai/OtRXE+qpDXXVhtprg69rg9W1gdLaQH6j/9hI
4MBa8HtPcFfKcQjVn2VU1zlZQVZckhVVsaIGVtzKSt6y0q6s7F1W8S6XhbLq
Lk7TzumbOVMtY31JOIsh34NY7Hou+y1GbnSEH70Jv34dGayNzLeG1zrCunch
Z08wNOBL5qTFjBmZ1xGLKkYoY6Ridl3A6pZZyxLt5hEBHhZZRBLzUHoGBGaS
mekINOlHxh3osBEbUuFDq8TwLDkxyIp7Nk1drK+bjPdjmVEEnQIxXhoXJglp
glTmWIhT2hilj1LGKGWKUOYwZQ5R5iBlDlCWHPyk2UuaPaTJRRgchM6Ga8yY
2oAqtah0HRHLIYEkwxOAs7z0xExqaCzRMxB72xV93RauaQi+eOUvKfcVPfXc
f+S6fc95Pc9x6Zrt/GXr6fPWE2csx75QTH+pmP5aObNDOfutam73+vz36wv7
1IsHN5aOaJZPaPmndYLzBuFlo+i6SXzLvHbXIi2wyR7Z5Y8dimdOZYlTmasU
z93KHCo8iuceWblHUupZfeZZLvLM3vOM3PR05LtrC92FJZ6jQ76vdYGvo54f
MtYzuPEmbXjEGss406tNc+OmtW3T1rHp6N509my6ejlPT9b7jvV10v43ZKAJ
DVeDsdJw8oE+nj8fvfM2XNoUbq8MTzYG194EjZ0BX08gPu4GZh0wz4ItG6iV
DVas2k6A62JWK2BNS4xjkfTNY5FZODEJpieTmakwPO1Hp13YtAWf0ROzanJO
Ss4LcgKbEU1mN0Y27X1MoJdI9CFQfwoZi6KzQWzZh696cKmLULoJbY4LL2n1
kg4f6fKRbh/p8ZLeHDyk1016XaTXQXhshNuCu0y4U4/ZNahVhZpliEEMaVcy
6kVQOQ1IR1OivgS/I774OjpTHR4vDw498ffe93bd9Ly55Go+7Wg4aq/Zb6va
bXmx0/z8S1PZ58aSvZPOfZPOA1POQ9OuI9OuYzPuk7Oe0/Oecwvei4u+K0u+
G8v+vJVAviBYsBp8JA49kYSLpeFSWeS5IvJCGa1URavWo6/U0Vcb0SpN5KU2
UqENleiCRXrfHaPrltF01Sg/b5o+YKu95bjU6v5Y5f8s5N+dcp+BXHmo+zHu
eUH66qhAKxXqoMLvqEgfFRug4oNkYoBI9mGpd0i6IwM0J8Aab/qFNlkyHy/q
jlQ2hbteBOfq/epmn6fbnRizZebM6JKBFGgZyQarULNqJauVsQYxaxawjmXK
u4iH5pD4ZCY9nsiMh+AJNzppw6cNxLyG5KkovpReETLiJVa5mNXPbtonOP8w
HR3E0wMZuD+KjPiQKQe6YEJXzJjcgmutuMlG2O2Ey0HkSPE7yICdDNnJsI0M
W8mIlYhY3sOER4xYRI+FtWhIjQRVcEAG+SUZrwB0L6Wdcyn7RMI6FDP1RPTt
IW1TQF3tU+ZG+1On5IF99Y5VcM28fMHIO21YOKabP6SZ3bcxs0c9vWt96tRz
5PRz9GwFev4lerESvVyFXq3GbtRieXXY3QbsfhP+sAUvasOftuOlncTzbuJl
D/Gqj6gZIOuHyMYRsmmUfD1GNucwTr4eJxvHyPpRsmaEqBzGy4bQx0OZ/LHE
WZ4n91vnLMcGXf+m8//RH9odC51Jhe8A0aeZeCWUbITTbxCgCwF7EWgAgQdh
ZBBCBgFkIAH3RaB33kyHBWxVpOtnklUDsdbWSH9VaKHOp613h/tMwIQGm1+n
hSpWptqmSadgTXLWssY6xIxnlQqsEOElND4HpSbT4EQYHveg41Z8UkfMrZM8
GbUipldXWCU/q1virIubnlkuOMXEJoj0KAIN5SRBABlzIFN6ZE6LiHToug41
6DGrHnPpca8BD5jwsAWPWfGEDU/a8JQNT9swwIqBFgw0o6AJBQ0IqINBDQSu
Z0AFCKwBwGo6zU+mFhKpqVhyJJLIufgOf7TFG6lzhSvtwTJL4LHRV6Dz3t5w
X1e5LimcZ6WOkxL7UZH9kNC2f8W6d9n67CJSfAkpuYyUXUGfX0MrbqAvb6Gv
bqM1d7G6e1jjA+z1I6z1Md7+DO8oxbuf4z0viP4qYrCaGK4lRurIsQZyPIdG
ciL3Xk+O1ZKjr4ih3D2lxLvct+5hTTewyvPohYfImuO/Gz0f2Pyfu8IHvLGL
gcT9YKo0DFRHMs0RqDMK90bhoQgyGkbGg8iEH5n0IBN2eMwIDa9n+oVgz2J6
cDw50hWbqg/zG3z6RkekdyMzJqV4YmZNzKjFrEHCWsSsU8L4JHRQQkZEeFyA
ppZgYB7IzMbg6QA65cAmjMSMmlyQUktCenWJVfE44+Kmc34rMJuNzNDJaQKc
ROFxAB0LIxMuZMqIzGwgfDUiW0c066hJhTrWUa8GDerRqBFNmtC0Gc2YUciC
ImYUNSP4NmDCDBHmDGECCWOaMKQIXYLQxIn1KK4M4dIALvZhAjfGc6BzFnTS
iAxr4b51uFMOtUoyDQLw1RJYMQ8UTwNF4+kHw+m7A+lbPanr3akrHamLb1Ln
W1O9O6J9O6P9u6KD30WH9kRH9kZH90fHD0Unj0Snj8dmT8Xmz8V4F+PLV+Ir
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
ZfL93uj/ozHwhTH4rTH0gzF82Bg5ZYxeNMauG+N3DYmHhuRTQ6pMn3qpS9do
gYYN4PU60KYA29fATiHYLQSHBOBkTk4sg0s8QDgPSKcA1UxaP5+yLaa8S8nI
cjK9GodkEVQVIjaC29kmN4xzHFncnM3F2R2cw8Y5zZxTv12yc4PZvUr5FrHQ
WCbeHQXe2pC3CnxISM4u0au8rHaFs4k2fWtbYelWXLaZknOAIgvKWUjKwBIK
EeIoD8Zm4siYGx5Qgd05nTOeWuhLyEdjtslYlBfOSAKo0kdueGmdhzW4tzmy
OTmHg3PaOJeFcxk5lzbrzqU+OeOXUEEBHuahsWloe5Z4KAwOeqEBG9JvQAc2
sGElPirFx0XEhICYWCYnF8iJWXJikhwbIccGyLFecqyLHG0nR1rI4YbtWe7+
CrK3hHxXRHYVkB23yfZrZNtFsuU02XyMbDpENu4lG3aT9TvJ+q/Jui/Ius/I
uj+22v+u1f4PLfZ/bnH8qNX5s1bnL9tcv21zf/TG81m79+u3vu86/fu7Akff
Bc/0hi73RW71R+8PxopG4s/HE7VTyZbZVOdCup+XHlkCpvjA/Aq4tAIKVkAx
PyNdzih5GfV8RrcImpYA+3Law08H+akYPwmsxmBpGFUGCLWX1rhZnZMzObaH
cY4jl5XzmDmvkfPqOP8GG1QxYRmVM78xHpIcB9KDoUyPFenOkbVCTs8ykpms
YX7TzdsKL3MJYTYtZjNrDLxGo2skJiEIEUoIQZwfx3h+dNYCj69lBpeBXELm
9cRl/RH7QCix4IZXbYTMwqgtWUMu3VmyjhxBZs5j2m6DT8/5NdsSIqSkw9Jt
Dx5dRuOzUHIsnR4MA73uTLcZ7lSjXWtYrwAfWCSGZojRcXJimJobopcGGEEf
K+phJd2stCMra8vKm7OKek5RzSkqOEUJJy/i5Pc52a2s9AorOc+KTzKiw/Tq
Xkr4HSn4hlz5E7HyCc7/CFv+Hbb8K3T5F8jyB8jST86avzlv+faiZc9l676r
tsM3bCfy7GfvOi4VOG8Uuu8+9Twq9T574a94FaiuDza9Dr95E3nXGR3siY8N
JGaGk4tjKf7EtnKQzgDKWVA9B2oXQeMyaFkBHTkdvgr6REBQBERF6ZzMA3I5
RxpDFGFcFSBzTG04WZ09a7Jlrbleeq+yvLn+0WZDGjayQcfWqYSCSK1haQEC
8t7PUUx4kWFTbgwTYyvkzDS7NsmZJrd8k9noHJNepCA+iQoIXIgSqxAhAghx
AheF8VUftmJDeRvIvAzKjSX+ZHq1L6HsCdt7fYkpM8LT0GtqdkPNmjayto2s
ayPrzWk8DRvSMNttUFNxJZmQE0kJlhIgqQUoPZ0GxqLggDfTbYXaN5A2MdrO
wzom8O4+YqCTmnnL8N9k11o5VTOna9o01WcttaythnZUUc4XpLMcdxVjrseo
6wHsugu5bubqC+A8m3IeTzoOxh3fxxw7IvYvwvY/huy/D9h+5bd94LP92GP7
n27bP7hsf+u0/bXD9t++NhZ8Y3q00/R4l/nZHkvpD9aKA7aqw/baE46mc862
q67OPE9fgXf4iW+iPDD3KrjUEBa2RtY6o4re2MZQXD+eME0nbfMpJy+VCx+/
IB1aBaJiIJ6TEGsAsAZkpGlYkURVcUwdxTdCpCZAa72M1pU12LNma9ZmzjoM
WZduu5eCG2xETcdVZFJJpGUYKEGh1QwsSOVcFbrox+bs+LSemFGQsyvU4jSr
mNi0jHL+ETo+ToBTGDIDYQtpfDmBCyL4agAXe3CxHROZMIkeleZclQyWCzLy
KUA5nND2hR3dnvioFplZY8QiRr3KGle31y59Ujosp2IKcnucKPDtNqyhoAjJ
CKEMH4AWE9BMBBr3QYN2+J0efiNHWvloyyTW8g5/00iN1LBLlZy8PKsrpqzF
OV4Q3zMo+BSMPEnHCpOJB7HE/VDirj9+2x2/aY9dtUQvGiJnNOET66HD8uA+
SWC30P8N3/enRe8fZz0fTrl/M+7+5bDrZwPOH/c6/uc7xz922v/+rf1v22z/
Y8f60Lfqkd0bY3s3Jg9oZo5o50/qeOcM/MtG4Q2z5K5F/tCmeurQPHcaXrnN
DV57q9/VEfD2hgKD4fBYJDYVS8zF04txcCWRESVgaRzJVe1tdmK4JkbkrKU+
vF2+DQHG+L485SSExcHZbJzDzLkMWfd7z5IzLFHldjSlpRgoRiFRBhGl0NUY
JgzhK15i2UEum8jlDWpZSi3zGclcVjO56Rhmg4NkYhCFhoDt9Y6ZALroxpbt
mMCMiU2Ywoip9ahWg+py5ncN1i9DhnnANJWwDUV8vZ7EsAaeENIrC7RymjHP
kp4FfHtamI9ux7IA3h4nIhARpZHVJCqMofwIygug8x50yo6OGNG+dbRLgr5Z
RJtH0MY2vKWSGn6WXblHq28gtqsp/+VI7KIrdtUUu7kRuy2P3RXH8ldi+YvR
/JnonbFI3mD4Zk/42tvQpebguYbA2Rr/mUrfqefeEyWeY0/cRwpdBwuc+/Md
e/Pse27Ydl+17rps3XnBsuOc+Zsz5q9Pmb7aJTDtEZj3CS2HhLZjq/bTIscF
seuaxHNb6i2Q+Z8ogmWqcJU62qCJt+qSXYZUvwkYsWSmbNC8HVl2okIXJvHg
Mi+h9JJqH6Xx0dvKwc8a/dmcvjL7OKuXs3k5h4dzujiXk3PbOY+F85o4n47L
pZ2wmo6pqKScSK9hmVUYXgVQYRwThnGhjxC4SKGNEhkpkYYWK+hcJMj5Wc0C
Z5na9I7QkUE81ZeBeyPwkBsZNyMzWoSnRde06Lp2mybjOmpR/GWSBHKuZtz8
tHc+ERyLxkbd6VENMrpC8ya3TbdlAM0Z2NgIsL0oNheHedEcO5gghAuDuNBP
CLzEiptYchCLFmLOgE9t4GNybECIdc9hbYNoYwvWUE52F7DzF7H1Q1H3d9rg
7sXgwYHgyZbghZZQQUuopCVU2RyqfR1qaAy9rg811wRbqgItLwLNZf7Xz3xN
Rd6GAk/dXXfNTderK87KC44Xp+3Pj9vKDllL9lmK95if7jI/+cb0+Etj0efG
wk8Njz42PDzbnrjwNnm5I3mtM3WzO33nHVDQBxYOZJ4NQ+WjcNUEUj+Dtczj
b3lEzwo5tEqNS+gZGbOoZFbUrFjLyvRZlSmrMWf11u1KtB07OWnn5Fyu9w/o
uTifk/M7uYCDC9i4oJULmbiwMRvVM3EtnVCTKSUBSDFIBMPCNCqIYYIgseIh
BXZq1UyJ9bnSQkvljFzMaoSckb9pX9jyTbHhMTIxhIC9CbjHC/cb4RHl9vSj
UAkrFIhGvj1BYZPCLhnszZlfaSYsBnKuIbGYSM8HwVkHnOvyCQG9ME6LO0nT
m4y/NRnvCAF9XnjUhU478Hk7wbORKzZSaCVXLdSqiRIaKIGWXF4nF2XkbE74
8YjByVy1wlqasaYKorWA7jtPCb71O37d6/59oetYgavwvqcm3/sm39f7yDfy
xDf1zDdX4l0s8S6VeJaLPfyn7pXHrpVHzpUCBz/fvnzbunzDsnTFzLtoWjxr
WDipnz+mmzuknduvmf1he81rZtf69E7V9DfK6a8U018opu89Rh88QQufoU9K
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
6CBXXxILT4mZe/jELXz0GjZ0Ees/g/acQLuPop3fovJ/sCr+0ar4kU35Y5uS
zafY1e84NO86te+5dB+69R97DPu8xs99pq/8lm8D1mNB2+mQ/XzYcSXivBFz
3Y67GhLuBwn346T7Wcr9PO1qyrheZhzNWVtzztKcNzYXtM1FxUtQ2IRwm/Cl
VyyX0tAg0TFFvlpDXwmKLcpMizHZ7Ii/9MRe+aPtgUhnsIZoZyDe7Uv0uFN9
1ky/Pt8vA/v52OAKNTVFLvWTvFZS1gyZnudqfzf8IJx47Mw8NRSeycHnO3Db
OtqzgA2Nk3NDzM5QWTNUdQyWgyN0fILITGNFlk8bQhYKyFIGWUkgK2Fk2QMv
mKFZOTDBL8ys5hZH0+vdcXF3yFO7gld1+K6mpNGxk3M81nLQUYm6KgkP2xuV
8VdzwUo+WCmEKsUawuy/QKgMBMvFQLnoLxd9pYKnlHexLLhZG5Mx02k9ndRQ
bKmAmIjs4kEe5l9FPfOIcwK2DYLmLsDQUtQ+zavu5eR1GcmltPBMSnAssXM4
vv1lbOtAlLcvyv044vn7ce8PJrw/nPT+05Tvn6d9/zLj/9lc4JfzgXcXg+8t
hz5cDX3MYfMpn/OiX21Fv92JfS+InxLGz4kTF6XJq/LkDWXyljp5R5u8q082
GJINpkSDJX7XGqu3R267gnVe37WQ41rUWJeQ385uNYBzT4ixDqJ/hGDHX/LQ
PhE0qAJGDMVxS3HKVpxxFOecxXkHsGAHF6zQghGe16KzMnxqh5pdp5ZmKc4g
udOKaZ4XnA+S4bv+5ENz7qkKaBLBnXy0n4uNreLTC+TSNM2fKikmK+bxqneE
iYySqTEsPw5D43l4OgnPhZFFH5u1WTXCq2poQwHxxaBgBxBxCtKZnHIqZRmL
haa9+VUjtq1ilMqSWVVya9h5HDFTKWVl97/gYgAPA3oZyMfAPgbx0TWgNXjf
wk2hLgpxkIiNRCwEbCTYHis1BspRQIwUd+E8D8ytApn5QnoilxzMxLtS0eZ4
+Ek0WB/yXwt4z3ndx9zOQ07HAZvtU4v1Q5P53wymd3TGn2mNP1Enf1GX/OXN
5K9uJd+9k/ptfep3DekP76c/epj+9HFm/7PM5y+yX73MHn6VO9qeP9GVP9NT
uNBfuDxUvD5avDlRvD0F3J0B7s0B9xeA+0vA/eXivZXi3dXC7bV83XruKjd9
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
hh4RGhC5EVUbUJ0BNeoQkwYxKQpmScHEh42boGEFMMxnDRMp40DMzKggeoJN
2kQLC2ybIIa6idkmYvspIn2S1z7OWh6lHA8Snnsx351o4E4oeNsfuukJXXeG
rtpDFy2hc8bQKV3wmDp4WBE8IAt8KfbvFfj3cH3vsXxvb3r/uO79/Yr3tSXP
vy54fjHr+emM5ydT7h9PuH80ht1/F3v0PvZ0D97wKd78OdG2j+g6SPYcIQdP
UmPni9NXiwu7Yl/b9WVea1ncVVH0VTQjVeNk1TpXczCqNcwVoxBnJ8LfidPB
SExnvzsZeS2nqAHKal5VBVUVSFWGVaWCsogqKExO4lKMEMOECMCFSVwQ/vu6
JzKhSgOi0yImJWKTFFwyhvQaloIJMZAV5CAG+BXCJG5KbC4rNWWdtGzmlz0c
MsLG0qxCfhuCOVmEl2LYzaIIIQ6SYmYriZI46H9ACbV0Okqx2UXuclkyUTV0
U54mMPnEn3umA9oF+X4huCyBeDJYLi9oFQWTHLHKEYcUce7OFo8I8vBBDyfv
2cx5VjLumaR7OOrpCvrqPKGn+tgTdvbhEP7yKb5wDpQfidr2e3zfGcMnlfGz
0uRFYfoKP3ONm73Oyl7byl3byF1ZzV1ayl1YyJ2bzZ6eyp4Yyx4dzhweyHzT
k973Mv3Fi/SnramPmlMfNCTffZZ8+3HyLXrpu5d4407i9VuJ391IvHatvPir
8vJvyqu/K6+/Wd76U4n1bom7pyT4rCTeX5IdLqlOlrQXS8YbJcuDkr2u5H5e
8nWVgv2l8GgpNl1KLJRSq6XMZinHLgG8EigsQZISLCsh8hJKj46qiKkoXE0R
KpJU4aQSJZUwqcgTiiwhTxCyMC7xMMh4es2h57OenslyZqTcUiggBWOSfFoE
5CXpgjyOKkKEwlNUWCsaQ1mvYtzKwS36WXhsA8mugOBaurAZQ1lBnOMj+fSI
MhtZRbmlKDcw4jn0Ei0TlhTssnq1op+u2XspXwuYeOjO3hNmnq5k+9ZyKxuA
YBNUbYEmetUVQl4x/QD0VIEiEjAmzseFQJybizPXO1NxOvEbjca7g/E2V6ze
EHsgTtxayN1pxkb25y2/U0TeHk993pM7+jJ/4SV4oxu62w0/7IafdBeedRfq
ugp1nYVnHYWnrYXHzYWHDfC9Z/DtR/CNe9DVW9Cla9D5S+Dpc+CJU+DR4/nD
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
6CtNbkSMTtLlLbu4zS7yWSUxqyTbpv/LkmKzpNgoyddK0uWiaLHIp4s2uraa
pGbHyaFxsm2KrF+B7gkTZ03eS3blVTfrmn/hemjyYXi0ITL8PDrUERvojPW/
jPW9jPV0x7pfxrq6Yh0voq3t0ebWSENL+Flj6FFd8N7jwK0HgWt3/Zdu+c5f
856+7Dl+wX3krOvb085vTji/Pub48ojj88P2vYfsnxy0fXzAtmePbv4T/eLn
huV9prWD5o0jlu1TNs4Fh+C6S3zPI3/qUzUHdJ0hU1/ENhpzziQ8S6nARiZE
x2UhkJCCKSWU0cI5QwEwI6AVgRwo7MQK7t12Gy+O+RjDd42gzfs35A1Kegqk
C97t2siRlhRpiFJqf1FqK4vVZTGvJJsvmoeRYHc29TKYH7AXxk3YnI5Y05Is
DcVTUQJFUUTX5nTKxy9rOBXDVtWyWnPO1XzjpdAgHn9FZ0TpfLMPaDLkmoTZ
puVM61y6fyI10Z+cb0ustkR5zUFVvdfZZI11yoEeNja6Qi3M0wUlxZmkhBNF
6TilGic144RuHNeNYtoRTD2IKfow8Suc08XsS8x3k2N9ZPcI0TSLN2znn8gS
d02hu073I7eZoRQFlE1BWXNI0hIWtUQELRFec4TTGGHVR7aeRTYeh9cehJbv
hBZuBmevBqYv+CfO+EZPeIeOePoPunu+dr38wvlir6PtI8fzD+zN79oa37bW
v2V99gfL0zcsj183P/qt+eEese1Tif0LqWO/3Pmtwn1M5Tmj8V3WBW4Zgg9N
4QZrtM0Rf+VKDnnTk/7sQghYi+RZMUiQgKUpRJlGtVnMmMMtAGHPE/T7d0NM
B40fLgbgYhAuhgqlMG3wvxlUCoHlUL4cAMr+bNmTLjsTDCvH6Kto7RWlrkzn
3ZLFoqYP8dQnk08sYIsEGeDhs1xyncssekJeSSEoawUVo6Bi4VXtnKprq+ZZ
2fHPMm4V6ccSnWCmIZJ7ZMo+4KTvT6XqR5M9fYnJjsTS8xirLSJtDeqbfa4G
Z6Rdl+oSgS/X8cFZcnqEXO4lt16Qog5U2QHrO0BTe97alrO15mzPs8zF8qas
viGnqgfEdRCrDl1sICbbicE+oov2skW8nQXTuUeHKtNuSLVbE23OeKsnRi+z
bb5wmz/Y5g+0+X3P/d4Wn7vJ56z3Op56bI/clnsu822n8bpDf9muPW9Vn7Yo
j5vl35lkB3e7vb7UCT/TCj7R8vYwSpWc91Tsd1Sst5WsPym3j42mTo6nz05m
Lkxnrs5mby7k7i8DT9byjVtgOwfq5jNcpHE5MqtGV/T4lpng2giRk5R7GI/Q
B4vmcMkWLTvjZXey7E1V/OlKMFMJZavhLNNTE921WK5GWzTLWCRTC6droSTT
4uGP1rwhZkfd5mDklLUypg1LNkwY67LhCybgxhLSPk6Mjxa3Z8qy5Yp+o2rb
bQXycWpB9k54eyeyUY0y0lKl+CSZGESTnflMXTh7R5e+upS42BN7/Dz66kFk
5lmQ2+DXNHid9e5IuyXZpcl2i6FX2+irRXJ4gpzsJ+fbifV6XPAYUj7IGu4k
bTdjrqsRz+WQ91KANs+FoPN8yHoxYrgSV1xP828Daw+Q2Xpi4gUxMkAOTpB9
C2TvGtXPIob4TNvUqAwZVRbGVPCoBh7VQiNacEgLDmrz/RqgRwO8VOdeqLJt
ikyzPN0gTT2VJB+KkncFiZv8+FVu7BI7eo4VOb0VPr4ZPrIeOrwWPLgaPLAS
+Ho58NWS/4tF/+eL/qtP0Rt12O0G7H4z9rgNr+vEm1/h7f0E7e/9k4z22vQy
tbhZXOcU2cKSQFqSqsoqOnMzVUzWipWRTaq6fUyzzN/IRJFoLRqrxRO1BG3J
WjJVS/0vSzKWpD+P77JvwrVIsBbyVv3OqttUsakqBl5ZNVdUdhXMl6Lx/cvw
nafUTF1F+qJqGah5J6qh+WpspZJYr6Q2yunNUmajmF1lroZmZ7DsKF0SAkBT
NHvPkr60FT/eHj59N9B43jtz1aG8YQk0qJIdYuAlt9CzifetUMPz1PgUOTVM
znST8y3EymOMcxuUXklrT0ethwOugw7vQYP/G3XgG6X/gNK3X+352uD42m46
6FediAovprdvgssPsPlGYq6TnOsn50bJ+WlqYYFaWGaALIsbxcWt4uJ2cYFV
nGcV51jFme3i1FZxYpMaW6eG16iB3XTl5Tz5YoZsnSKbxom6EeLJEPGgn4F5
3ezGr3VhlzuwC23YuefY6Rb0ZBN6vBE9Wo8eqUO/e4Y2n0Jbz6LtF9DOK9ir
G1jfHXzoIT5eR0y3EAsvyNUecmuY4k5SovmibLWk3i7p+czlW7ui7NJUvIaK
31IN7XZtxDzVuK+a9NdSwVo6VMuEa5lILRtlLPdvlqU/oT8P1dLBWspXS7ir
MXs1bKr6NRW3uGTbpAwTuLoZ1B8OJt9rKc0cpEsV3P8Ii3Vg6UE8N4mD8zi0
hMMrWIG2ZbSwUCjMQIUxAO5PgS/CQL0zc0uZPLUQ2ffQf2C/q36fTnt9Jf14
DO8cJoaGyMkhpmdtsZ9c7iFXOsmV5+RaPb75CGHdBvmXMpITcfWBoOkjt/19
vetdifcdru8v296/sDx/4TvekVveM+s+9coPhYWnktzLue3b0NZjZLMB32wl
t7rI7V6KPURxRinuBMWbonjTRd5MkTdb5M4UOTNF9jSzM781QW2MUWvD1DL9
DH3kXDc53UlMtBOjLcRQIz7wDO99jHc/wDrvYh23sNbrWMsVtOkS2nAerTuL
PjuDPjmFPD6JPDqOzO5NzX2RWvg6vXwos3oks3Equ30hx7kG8O/mxU9AeROk
7oB1vQXTCGKbRp2LmGcd97OJkICMSKmYikpoiyljMWMpZe2lnJPpoMl7y6Cv
DAXKULAC0xb6dxasQIEK5C+D3nLeXWbwN5ZSSl+MK6kwn/CuYtbhgroOEB2J
B37Ybg/+3Br/2pW54QeaQlBPFB6LF2YSyEKCoTms0F/jyGK0MBuGJwLQoCff
ac/V69M3ZYljW5GPhvy/PmL/y62rSN9RZO48tHED4tyHBE8gcT0kbdi1OlD6
JC95AIhv54RXMoJzKf6xBP9gjP9FWPhRQPSOV/JHt/RNF23iP3mE7/n4nwR5
X0V438b5J5KCC2nR9azkbk72OK9oAFUtkLod1nbBulcFfW9B31cw9COGAURP
Wz+i70Pot6d9VVB3FVQvYEUbLG+G6QcQPwWFD0H6JXNu5llXga0LwMaZ3NqJ
7MrR7NK3mYVvMnP70rNfpmc+S099yhwoT3yYGv8gOfZeUvFbu/INh+qtXfW8
PR79Z17j137zdwHrqZDjUsR1O+Z9HPc3JUOd6Uh/Nj4GJGfz6RUoswXnuIW8
CAH/xiTS4QUjgVgI1EaiDhJzUZibwjwU7qVwX/F/GealjfnR39ptChYSMhB5
NZ6VYEk2ElmA3QN5bV1u5SJ4oi932nOnPXJ3Mtmwnu3i5Qdk0KQGnqfrJFNh
1VJYszBfl83wvAme0oPD2vxLVa5Rnr4lS5xQRz8OhP6VZL2W/eRs5M9j/k/5
voM63wmb95yHiUdXw67rUceNqPV6zHQtrrscV1xIiM6lWGcyy6eAiVNw72ms
8wLWegVtuYa2XEXbL6Evz6KDJ5CZE+DaySz3dFpyLqm6mNBdTZhuJWz3Eo6H
CffTJJ0g+RqT/uZUoCUVeJ4K/s1aksGmZKAhEahjRCl9D2O+uzHvzaj7asR1
Mew8E3QcD9gO+60HfJYvvaa9HuMet+Fdl/7PTt0fHNrX7ZrXbOp//Tv/S/kT
i+LHZsWPzK5frrh/s+p5fd37x03fOyz/Hk7gc37ogCh8VBo9p4xf0yTvG1J1
5kybPffKBQx5wakAtBCG16MFVgLlp1BJGlNkcQ1A6POECSQtEGmDSUeBchYo
F0K5EcqD/m9zo5QLJZ0IaUcIC4IbC5gWRuQQxAeB9XxqCgj1Zs2N2ZV7yL0+
/JxV9zC4/iKxNpXZXgN4HFAkgiQyWKqAZcqCVFkQK2C+HGZLoDVBfoYN9LGz
z3npB9LkeXN8f9L/MSndS/Ydga9eAS89By4O5S7MZS9tpK/wklcl8avK6GV9
6ILFd8blOBk0no3QQ8a9nF2+Co/fwIce4L3P8O4GvKsJ72rEu+vw3kf40G18
8gq6ejHPP59Wno0bT4cdp4Lec97AZVf4hiN6xxZ/YE08tqaeWVL1lnSDOd1o
ytDWYMzUGzLP9Okn2vQjTfq+KnVbkbwuS16WJM6L4qcEsaO86LfsyP7tyBeb
4U/WQh+sBN9ZCvxpIfDmnP93M77fTPt+Nen9+YT3X8Y9/3PM88+jnn8aib3W
GP99c/yPrYm/dCQ/6Ep92pP+aiBzaDR7Yor+G4EbK/kHm1A9B24XFnpkyLAK
ndJji2ambmW5SL6XlPgpRYjSRIr6GNM+Y0mWbKmSI1NyZkqubMmdK3loA/5u
bqDkAopOpu/mb4RzQpPG5UxXFLwRB2ZiiZ6EuyUtqC8M9RKt/HyjO9IXdk0m
bUsZ6zpg3QatbMjChc0C2CSEDUJII4AUPFDEybO2gMW17NBKpo6XuqVPnY0l
v4Vdx0qq06WN6+ToA6yjDmluLzT0wc9GoYcz+duL2asbqYu82Dl58LTJddJn
uhhV3Ejz7+XpcLb0jJhvImafEzNtxMwu33C2gZh7RKzeRTg38rJLKf2ZiOOI
33fcEj6tiV+Qpa6KMjf5ubtc4CEHfMIG69hQIwtqYsHN23DLFty8CTetQ42r
UP0y9HQRejQP3p8B70zmb4zlrwwD5wdyp3tyx19mD7/IftOW2dec/rwx/Uld
as+T1HuPUn+5n/zTXaYp781bTIPe764nXrua/fhUdu/Z3JcXcvuvAIduAsfu
5k8/Bi/VQzeew/c7C8/6kOcjaNcU2r+Ija3js2xiWUBuSkmuihLqijJTUWUt
aR0lo7tk9pVtgbIjVHaFy+5oxROreOMVX4Ixf7Li2zVvsuxJll2JsiNessZK
pmhRG6bkIUIQwDb98JwvOxiItCaMbfnNV+T0EjUhxWZt4EIQWEpmdyHCcR4Q
FeTDgnyAD3o5oHMbtGyA2vW8bA3gruaWlzPD9JBJ0vfs6Wup9EU4eJ103Knq
71ckz0pbTdTcc3ygFe14UWjqhR6P5G/NZi+u0/M8fN7oveiz34oZH6XVDYC8
BZa0IXQtJniB8TswfhsmaEGFDTAd75R3M/orcfvJoPeoNXxMnjjJyZxdAa7M
gXemoceTcMNEoWUcaR9DO0fRl6No9wjaPYx1D2Ld/ejLXrTzFdrRhbZ1oC3P
kcYmpK4Oefy48OB+4c5t+MZ1+Mpl6OJ56Oxp6ORx8Nh34HeH8ocO5A/sy3/9
Rf6rz4AvPmXOUz5lzlMKFz8uXN5buPYlcnM/cudb5MEx9MkZtOEy9vwm1vkA
76kjhlqJiZfk3AC1PE5tzhU5K0XhVknKKynFZa28bFCXzfqK1VRxWCtOe8Xt
rHg9FR+dpvurgUA1GKwGQ7sWpq0SCFf8oYo3VHEzPThlq79k9BY1bkriJNh2
dNEGjTkyr/zBF2k6agumiuzt4qasxDJSPBcuCKDCKCJIwrwMxMsC/Fyal4tx
csEtwL0KmOcB5VJOsJxdW8mOr2Wfy7INttzTSO4hkHlUiD4l/HUlRz0jvidu
Kq43E2PNaNvzQl0PeG8id3U1dV0cv2UM3/MEHsW8TSl3e9bZBdi787ZXoLUb
tHSBlo685XnOWpe230+4Lod9Z5yhE+r4MU7m2Bxwfhi82Q0/bEfqW9DWRryn
mRhpIadaqblWaqmtuNJWXGstrj+nf2lxvbG4Vl9cfVpceVhcvldcvFWcv1ac
vVScPlecPEWNHaVGvqWGDlADX1F9n1E9n5DdH5Jd7zHnKR1/JtvfItv+QLa+
QT5/vTj8x+LIn4tj7xbH95Sm9pZm9pXmD5WWjpdWz5U3r5XZd8u8p2VRS0XW
VVENVHTjVeNc1bJStW8xHCKPqOaXM0f/IV0tYmTkNGO2WtxRS7joZL2W9NSS
3lrSxzTJM33y/n9DV3qqfnfF46w4HGWLraRnbtVSQiOxaUBnjNCwPd0TCvXl
7BOIZrGoZJcU0rJcW5aayzJHSe6l5EFCGsEYvZEUxOhdZxIMESzrWMjpFnKS
1Rx7I7e0lRsVAF1aoMMJtIaB5ixQD6Xq0Ug96XlWMT2piJ8Vl+qx7iakqRt+
OgU+XM89FmfqdekWe7Ldl+gMx1/G492pWHc62p2OdKXDHalwSzJcFw0/DDA3
xC7r42dEqWPLuZND+Utt8O2HaOMtYoB+/7dLW3cqgrtV2d2q6m5Vd69iuFc2
3iub7pZMd0qmW0XTjaLpKmW8RBnOkfrTpO4YoT1MqL8hVF/hys9w+UeY7H1M
+jYm/iMqemNX8PDXKP+XCO9nCPcnCPfHCOdHCPufYNHPCuJfFSR/I0n9GVW8
h6k+wTVf4bpvCcNJ0nyRst4sOh4VXY0lb0fZ31sOjlTC05XoYjW+Xk0yovG1
jKSWle/k1DuAbgcw7OTNf81b/gra/go6/go6/5p37dAGuHdy7p2seyfj2kk5
awlHLWqrBi1VD10q60tadVGuovgqYl2NzujhMXtuOJQYzQXnYfc6bmWXzCKG
kmDQlbWmispaUTjKcg8lDeDCMMJJQBvp7EYmup71ruasi4BmHWB0Jtn5dW5+
TpAfUOV7zPlOD9AaBepztLtFHpLO+1X1g9J6HTH4HH3Rh3TMFjq24A4R1K2G
+ozgoC0/7MqPeIERHzDszw36s72+zEtPpt2ZbrSkH+kYltfF7ezJaeB0N3jx
EfLgPDl0qrx5tCT/jjAcQ2wnYfdpyH82HzwPhC/kohdysfPZ2LlM/Ew6fioV
P56KHUnGDiVi++PRL2KRT6ORDyPhd8Kht0KhN0LB14KBXwb8P/X7f+z3/dDn
/b7X+z2v5x88nv/scf/fHvf/6Xb/Hz739/ye/x7w/FPQ+y9h768ivt9F/W/F
A+8ngntT4f2ZyFH6dwHx6/nkAyjVAKfbkWwPmhvBgCk8v0iAayTEomBesSAq
FWQlRMloaaL6CmqsoKZdrVQrI5eK2Gq0FWyMVipk3QEtfwXMO1nTTpJ2SX0t
oKk6VWWDrCiVUDwZsanEFnXIjA2cDuRmkqlFMLaBBNm4l085RGWbnGnXMugr
GlNFxuhdU2Ifzg8juyrl6e1sZDvn3QLs66BhG1RxQCkX5PGYgZvmAz1KoN2S
awhm7wPJW5jnTlV3v8RqIme68KFhbGQRG2dhkyJsWoHNaOg5g86a0BkzMm1B
Ji2FMTOjoNijA18o803i/EM2cGMZuDQGnOsAz91Enx4pL+5FVO+n3O+Gou/a
Y58a4vs08UPKxBG6uJAmTokTp0WJ04LEaV7iJDd+nB0/uh07vBn7Zj26byXy
+VL4k4XQB3Ohd6aDb00G3hj3vzbq+9WI72dD3p8MeH7U7/lBn/v7ve7v9bj+
6yvXf+l2/adpzz/OeX+w4PvnZd9P1/y/2gz+jh36Iz/8rijyiSy2TxU/rEue
MqUv2zJ3XLknXqA5AHZGoL4YPJosTGeQxRwDItyGcC6MCxFCgpJyjFQSpJqk
tBSlo0hDkTQWSVOJYKyMm8qYiRnNgqEK6Wp5zU5WtZNU1MLyqkdasYhLSlFR
KCY5CmJDiy2bkSU3vBzKr6RyK/nUViHGwYI8wi0s2sRls6Ks1zBMGam1LHVT
zMFZrMBNg9xslpej05IQN+9lg3am+xVUsfLibWB7k9EB7hRn6+i/JZO+ivnu
Vo1Py5IXRdYgtTpFriyTayxyQ0BuScltBbmtJrY0xIaGWNPgy2psToFNStEh
IfKKA7euQ09nwdtD+Yut4KmbhWsHyktvBjw/WvT/qsP/Vl3g86bQyefhq22R
ux2RR53RZ13R+q5oQ2e04UW0oSNS3xZ59jz8pDn8sCF071nw9uPAjQf+K3f9
F275zl73nrziOXbRffic6+AZ1/6Tzq+OOz4/6vj0O/vHh+17Dtk+OGh774zz
t+ecr190vXnV/dZNz9t3ve899O15FtjbFPyqPfxNd/TIYOzMROLqfOruavop
K9siADql+T41OKqHpy2FRQey5ka3fBgniAkiuDhGyJKEIk2oMqQmR2rzpA6k
dDClL1A6lNJhlJagNCSppgh1EVOVEEUZklcAaS0j3omLagFR1SkqG0Qlmago
klM8Dck24htWbN2NrAWhtXh+NZtZZwRdgxzczStaRbt617qyykyvkCWFj1KE
cVkClWQKwhwoArIiIEEnk/TAbeVtS3nNUk60lF1bzAxtpB8bM7cymetY4EnF
0Vo19lc0U2Xlckm+WZKyixJ+USwqiiUMoUwoo/hSiiNh4OmrfGKejU+so/0L
SPsE/LQPut6aP/kAOHAWOv7+Y8d/+sR+61Pn84Pu3pOe0Qu+qWv+uVuBxbvB
pXuh5fuhlfuhZfqbu8HF28GFG8G5q4GZS/6p877x076R496h7/7decqnfz9P
aWLaUmx1b1mfvml9/HvLw99Z7r9mvve57fxX9gv7HZcOOa8cdV0/6b513nPv
iu/hLf/TB8HGulDr80hnZ6ynLzE4mhybTk8vZhfWc6us/CYfZIshvgIWqQtS
PSI3oUoLqrZjGieudeFaD671Eho/oQkR2gihje3etEkzyrdqgFSChKJAMLfa
CExEIaISJKzkBAw/JSqo+UVVh7hslJSUkqJUQYk0JM9AsCz4ugNd9cLLEWAp
nV4GoxuIn004+CWLrGzSlA2mis5e0XrKukBRGyE1cVyVwuQZRJSDBLkcN5fY
ygZWsraprHIiszWdHl1KPzRl7maz99HY81Kwt+ofr3kWaq6NqpNdtfMrNhHt
7BWzhAHpaUUlpaAk5Rb529TWGrm0SExNYf3DaNsr+GEreL4u89XT8K9fzr4X
P9mKnl2KXxCEryiD1/XBW+bgbVvwriNw3+l/6PI9dHkfujwPXO57Tucdp+OW
w3bdbrliM12wGs5adCfNmmMm1WGj8qBB/rVe+qVO/JlW+IlG8JGG9+/OU7b/
rNx819j7vqlvj7n/U8vA59bBr23DBx2jR1zjp9xTF7wz1/zzd4LLj8NrDdHN
tjj7ZZLXnxKOZiTTOfkioFrPa1mQng8bxQWzvGBVIzYdajegDjPmsGIOG+5w
4A4nbnfhNjduceNGD67z4soArogwFD0JIzeNCwo4D8e4ZIFXAvmVHL+WEjBX
tYPiqltSsUrLOmlJLiuKlbS7EVsGfMWCLLqh+XBuLsOIuG5jTFyTlO2ais1U
sdoYFrDJWzUFysZQyRChtDFCmcDEyQIrDa6nkwsp33hK15/ankiNrqSfWHLP
UvlmOiKTqfFScqGSWKvFt3finJ0ofyciqoXEtYC45hVVXYKqjVsxscqadeZ8
jj1FLg7hg110JQXfacoda429N2r+k3H5cKb3FtbVinf0E+0TRNs8+WIF79rE
XrLQbg7yklfo4sOdfKiDD7bx8y08oJGXe8bNPuZk7rPTd7ZTN7aSVzYTFzfi
Z9djp9aix1cjR1bC3y6HDi4H9y8F9y0Fvtw9T/mLQvWeUvWhSvWJWvW5Rv21
Tn3IoDlq0py2aC/adNcdhrsu4xOPqclnaQ9aX4Xtg1HneNw1k3Qvpr1rGR9z
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
IDsz/x8zluqe
              "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> 
              RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
             False], DefaultBaseStyle -> "ImageGraphics", 
            ImageSizeRaw -> {144., 144.}, 
            PlotRange -> {{0, 144.}, {0, 144.}}]]], 
         GraphicsGroupBox[
          TagBox[{
            PolygonBox[CompressedData["
1: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
Py0=
             "]]}, 
           Annotation[#, 
            "Charting`Private`Tag$414980#1"]& ]]}, {}, {}, {}, {}}, {{
         Directive[], 
         LineBox[CompressedData["
1:eJwt0bdNgwEQBtAfTMY2OdsgWsIChJ7QURE6CrDJyYmcBAsQFoAFCAvAAoQF
YAHCAsCzRPGkK06nu+86p5fHlgqCIEhRSL7uYJApclxyzyvfVGnqZZQkp1zz
yDu/xA3rZ4IM59zyzCeRUBB0M8wsCZLMMc8CiyyxzAqrrLHOBinSZMiSY5Mt
ttlhlz32OeCQI46ZYYguwnzY64kbzkgzTh8xftz1xgNXnJBghB6ifMnnhTsu
yDLJAO3EidFGKy0000QjDdRTRy01VOczJ0qEMJVUUE4ZpZRQTBGh/3/+Ac0Z
Le4=
          "]]}}}, VertexTextureCoordinates -> CompressedData["
1:eJx1mzGIJMcVhgc7EbuRUnEKjFOHZjcylxl7E2NHTqU7B4oMTuVTpFSg6KTI
cJHAkSuUsxLGQQkMw8BwNMfh8djt8ajd9EVOfbvs9xf/3+wmzUdX107NN+91
1avuH3z421/95nubzebT7282t8f8+/Lj9z74+qsXj52L+OnXX737/OM/x/kq
/uQW3/1rtG/im1/PH336r7/F9Vvx5bc/+exPr3bR31785u3Vf/jpy+h/EO/f
uetA/PO7//da/Hp32+Dv4i/u/v9B/Msf/uh/P/7mH+KLu+6O4r/87hdvW/xT
/Ozu843iq29uG/xbvNx93pP4j28/7Xsf/Ef85O7zn8WPbrt7/l2MZxJ//vbL
eefb/8b4ZvH9fw3ebJ7fe8WvcxHj189XMX69fRPj16/fivHr/e3F+PX+BzF+
YfzC+IXxC+MXxi+MXxi/MH5h/ML4hfEL49fHM4nx6+Obxfh1xm8JvyX8lvBb
wm8JvyX8lvBbwm8JvyX8lvBbwm8JvyX8lvBbwm8JvyX8lvBbwm8JvyX8lvBb
wm8JvyX8lvBbwm8Jvz3vfnjvDb/ORYxfP1/F+PX2TYxfv34rxq/3txfj1/sf
xPiF8QvjF8YvjF8YvzB+YfzC+IXxC+MXxi+MXx/PJMavj28W49eZ+K0RvzXi
t0b81ojfGvFbI35rxG+N+K0RvzXit0b81ojfGvFbI35rxG+N+K0RvzXit0b8
1ojfGvFbI35rxG+N+K0RvzXit0b81ojfGvHb50W/v/eCX+cixq+fr2L8evsm
xq9fvxXj1/vbi/Hr/Q9i/ML4hfEL4xfGL4xfGL8wfmH8wviF8QvjF8avj2cS
49fHN4vx60x+bpGfW+TnFvm5RX5ukZ9b5OcW+blFfm6Rn1vk5xb5uUV+bpGf
W+TnFvm5RX5ukZ9b5OcW+blFfm6Rn1vk5xb5uUV+bpGfW+TnFvm5RX5ukZ/7
uuVn9987fp2LGL9+vorx6+2bGL9+/VaMX+9vL8av9z+I8QvjF8YvjF8YvzB+
YfzC+IXxC+MXxi+MXxi/Pp5JjF8f3yzGrzPrwK38Ohcxfv18FePX2zfxjX2v
W/mF8ev97cX49f4HMX5h/ML4/cL+70GMXxi/MH5h/ML4hfEL4xfGL4xfH88k
xq+Pbxbj15l1/E5+nYsYv36+ivHr7Zv4xuJiJ78wfr2/vRi/3v8gxi+MXxi/
F/Y7Oojxe2Gf4yjGL4xfGL8wfmH8wviF8evjmcT49fHNYvw6U4fZy69zEePX
z1cxfr19E99YXtvLL3xp39tefmH8ev+DGL8wfmH8wviF8fvMfldHMX6f2eca
xfiF8QvjF8YvjF8fzyTGr49vFuPXmTraS/l1LmL8+vkqxq+3b+Ibuy+9lF/4
0n73L+UXxq/3P4jxC+MXxu9ief4gxu9ieeIoxu9iv7NRjN/FPudJjF8YvzB+
fTyTGL8+vlmMX2fqoIP8Ohcxfv18FePX2zfxjc0rBvmFLy1vDfILv7HvZZBf
GL8wfmH8wviF8QvjF8YvjF8Yv0/sd3cS4/eJfe6zGL8+nkmMXx/fLMavc6/L
49e51/3w6+d7XQG/3r6vW25sXvhKfuFLu++8kl/4TcTp0/CaR/zC+PV52EGM
X7+PH8X49fvAKMav55GTGL/+OzyL8evjmMT49fHNYvw+tM+CX+dex8Wvn+91
Ivx6+74OvbF5/Wv5hfHr/fX76JuPPO8+jThNr3nEr8+rD2L8+rzsKMav39dH
MX79vnAS49fzylmMXx/PJMavj2sW4/ehfTP8Ove6PH79fK/74dfb97oCfv36
vm7Br/fX50X49f6HVVymRziP+IXx6/Psoxi/Pk8bxfj1+/xJjF+/T5zF+PXx
TGL8+vhmMX5zH/TL+3Hi17mI8evnqxi/3r6J8evXb8X49f72Yvx6/4PY8/4h
8sQhflcH+YXxC+MXxi+MXxi/MH5h/ML4hfHr45nE+PXxzWL8Ovd9bfw6930z
/Pr5XpfHr7fvdT/8+vW9roBf76+vW/Dr/Q+r+2bm2YxLr2N0r3nEL4xfX0eN
Yvz6PPwkxq/P485i/Pp4JjF+fXyzGL/5nMKl/U7ZZz/KL4xfP1/F+PX2TYxf
v34rxq/3txfj1/sfxD5PO8Z9/Rj3gaP8XoZH+MI+11F+YfzC+IXxC+MXxi+M
Xx/PJMavj28W49e5P3eCX+e+r41fP9/3zfDr7XtdHr9+/Ta+t1301+sK+PX+
h9W8NudBed/0OuNhFZdep+pe84hfGL++Tj6J8evrrLMYvz6eSYxfH98sxu9D
zxF5/WqUX9jrV6P8wl6/GqN+NUb9apRfj4Nd9NfrRF6/GqN+Na7WLTnPzXmR
16/GVd69iDhNr3n0+tUov7DXr0b5hb1+Ncov7PWrUX79ObAleLO5tnnBi8fO
RYxfP1/F+PX2TYxfv34rxq/3txfj1/sfxPi9jnXKdcxrr20f4CDG77XVkY9i
/F6HRxi/11bHOonxC+MXxq+PZxLj18c3i/Hr3J/z8/rkSX5hr0+e5Bf2+uRJ
fmGvT57k1+9Tu+iv13G9PnmS36wj5Loz1ym+r3NYzYN8X+C4yrMZl/BVeM2j
1ydP8gt7ffIkv7DXJ0/y689pLsH9uU38OvfnwvDr5/tzJ/j19n1fG79+/Tbm
Hbvor9fl8ev9D6u6UNYRct3p+3SH1bzW93mOq/tm5ln4KuI0veYRvzB+fTyT
GL8+vlmM34eew/X681l+Ya8/n+UX9vrzWX5hrz+f5dfnkbvor++zeP35LL9Z
58u6UNYRfN/1sFqn+L7dcTUPyvsmfBV5N+M0vebR689n+YW9/nyWX3+Oegne
bN63dfWLx85FjF8/X8X49fZNjF+/fivGr/e3F+PX+x/E+IXxC+MXxi+MXxi/
MH5h/ML4hfEL4/f98Ajj18czifHr45vF+HXuz8n7/sIkv7DvL0zyC/v+wiS/
sO8vTPLr67xd9Nf3QX1/YZLfrMNn3TbrfP5cRK8TZV3B9xem1bol57lXMS/K
+2jm3YzTR+E1j76/MMmvv+ewBPf3HvDr3J+rxq+f789t4tfb9+fC8OvXb2Pd
vov++r42fr3/YbWvknX4rNv6cy6HVV3In5M4rtaduU6Br2Kem/OivI9m3n0U
cZpe84hff29lCe7vsfj+0Sy/sO8fzfIL+/7RLL+w7x/N8ut1mF30159T8P2j
WX5znyz3VbIO788t9Tpu1v18/2he1RVyHXoV65ac5+a8KO+jjyLvZpym1zzi
96H3kvDr3N978PfLFvmF/f2yRX5hf79skV/Y3y9b5Bf298sW+fW89CrG2ffN
cp/F3y/Luu0iv3DWibKucBXr0Fy35Dw350X+flnm2YzL9Lisjv8HboXaUQ==

       "]], {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {Automatic, Automatic}, 
     DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Method -> {
      "GridLinesInFront" -> True, "ScalingFunctions" -> None, 
       "TransparentPolygonMesh" -> True, "AxesInFront" -> True}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, 
             RasterBox[CompressedData["
1:eJzt1j1IVXEcxvEbZUM2FIQ5OFSLLUbUUhC6NFRDN6IisqGCmoRehmrIpUCa
pDAiQ7LIgkzK3qTQyGsvammZld1eNEsrtRcbahGhznmeXJIv/7HFH+dy4H7Q
c8/5/X/P/8zdtnPt9smJRKI1+kyKPlOiz8nyuF4V/HtOqH6M+37sPL+4M7e4
cxh9zUhVcqSKfZ+KvfLnyuhgb96dEx3sw99V6LOLUllFKfaCwbL8wTL2HSr2
0r4l0cFetyUzOth7uuP6hj61sDajsJY9L30wOtjXq9jV3lz2c8m4wV/R29vi
Yv8Vt7eSPUcNZl+uYld7s9iP5ccN/oLeUB8Xe3/c3lL2TDWYfbGKXe3NYD+k
Bg+hX6yOi13tLWbX+CbZ56nYV2mAB9H3qMHsPrOrvUXsGt989pkq9qUa4AH0
rWow+2EVu9pbyK7xzWN3PrM7nz+jO5/Z9yuf2Z3P7M5ndufzJ3S1N8Wu7pax
O5/Znc/szmd25/NHdOcz+wI1mH2D8pnd+czufO5HVzy3sau9lezOZ3bnM7vz
md353IfufGZ3PrNPV4PZnc/szmd2jW/6A7riuZrd+czufGZ3PrM7n9+jO5/Z
dSpnb9IAsw8pn9mdz+zO5150jW8du/OZ3fnM7nxmdz6zr1YD36Gf0gCy+/W2
J5CP7M4/dudbdyC/2A9oAbM7f94G8oXd+cHufHiDPk3zz75JC4Dd8/s6MJ/s
KzR/478fO5+A78fOA5ofdsdfOrD+2bscYOh+v3iJ7vcH9ha9H7Bnq8Fd6N7f
2b1/s3t/foHu/Zdd7R15ju79k937I7v3v2fo3t/YF2n/Ynd7O9G9/7B7f2Hf
pQF+it6o/YF9hvKf3fnegX5J+c0++juuJ+gVaiD7MuXrY/RexWd7IB/ZnX9t
gXx7hL5Z+cU+qgX8MJA/rYF8aUH3/sjufGhGn6X5f4B+XQuAfZ3m935gPu8F
5u8u+kLNF3uH5qcpMB+pwPpnr9H6buT+6QbvcH+0Pm+jZ2v9NaBv1PqqRz+i
863A+rjJ11f/6/j66u8Nvn/171qgP1cDz/8K+mk938voc/T8agLP5wJfX/d/
nv9e93c28PvPoCf0+yrYdf3j7Pr/RwN/XxLwvex/a8In/H/6H5X32l8=
              "], {{-11.25, 
                Rational[-225, 2]}, {-3.75, 
                Rational[225, 2]}}], 
             RasterBox[CompressedData["
1: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
              "], {{-3.75, 
                Rational[-225, 2]}, {11.25, 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{11.25, 
                  Rational[-225, 2]}, {-11.25, 
                  Rational[-225, 2]}, {-11.25, 
                  Rational[225, 2]}, {11.25, 
                  Rational[225, 2]}, {11.25, 
                  Rational[-225, 2]}}, {{
                11.25, -112.5}, {-11.25, -112.5}, {-11.25, 112.5}, {11.25, 
                112.5}, {11.25, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{11.25, -112.5}, {11.25, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{11.25, -112.5}, 
                    Offset[{4., 0}, {11.25, -112.5}]}, {{11.25, -56.25}, 
                    Offset[{4., 0}, {11.25, -56.25}]}, {{11.25, 0.}, 
                    Offset[{4., 0}, {11.25, 0.}]}, {{11.25, 56.25}, 
                    Offset[{4., 0}, {11.25, 56.25}]}, {{11.25, 112.5}, 
                    Offset[{4., 0}, {11.25, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{11.25, -101.25}, 
                    Offset[{2.5, 0.}, {11.25, -101.25}]}, {{11.25, -90.}, 
                    Offset[{2.5, 0.}, {11.25, -90.}]}, {{11.25, -78.75}, 
                    Offset[{2.5, 0.}, {11.25, -78.75}]}, {{11.25, -67.5}, 
                    Offset[{2.5, 0.}, {11.25, -67.5}]}, {{11.25, -67.5}, 
                    Offset[{2.5, 0.}, {11.25, -67.5}]}, {{11.25, -45.}, 
                    Offset[{2.5, 0.}, {11.25, -45.}]}, {{11.25, -33.75}, 
                    Offset[{2.5, 0.}, {11.25, -33.75}]}, {{11.25, -22.5}, 
                    Offset[{2.5, 0.}, {11.25, -22.5}]}, {{11.25, -22.5}, 
                    Offset[{2.5, 0.}, {11.25, -22.5}]}, {{11.25, -11.25}, 
                    Offset[{2.5, 0.}, {11.25, -11.25}]}, {{11.25, 11.25}, 
                    Offset[{2.5, 0.}, {11.25, 11.25}]}, {{11.25, 22.5}, 
                    Offset[{2.5, 0.}, {11.25, 22.5}]}, {{11.25, 22.5}, 
                    Offset[{2.5, 0.}, {11.25, 22.5}]}, {{11.25, 33.75}, 
                    Offset[{2.5, 0.}, {11.25, 33.75}]}, {{11.25, 45.}, 
                    Offset[{2.5, 0.}, {11.25, 45.}]}, {{11.25, 67.5}, 
                    Offset[{2.5, 0.}, {11.25, 67.5}]}, {{11.25, 67.5}, 
                    Offset[{2.5, 0.}, {11.25, 67.5}]}, {{11.25, 78.75}, 
                    Offset[{2.5, 0.}, {11.25, 78.75}]}, {{11.25, 90.}, 
                    Offset[{2.5, 0.}, {11.25, 90.}]}, {{11.25, 101.25}, 
                    Offset[{2.5, 0.}, {11.25, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {11.25, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False], 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{-11.25, -112.5}, {-11.25, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{-11.25, -112.5}, 
                    Offset[{-4., 0}, {-11.25, -112.5}]}, {{-11.25, 90.}, 
                    Offset[{-4., 0}, {-11.25, 90.}]}, {{-11.25, 112.5}, 
                    Offset[{-4., 0}, {-11.25, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, -112.5}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, 90.}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Infinity]\"", TraditionalForm], 
                    Offset[{-7., 0.}, {-11.25, 112.5}], 
                    ImageScaled[{1, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ThemeGradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "BalancedHue", "ThemeGradients", {0, 1}, Blend[
                    "BalancedHue", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#1", "+", "0.5`"}], ",", "1"}], "]"}], "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"\"ColorFunctionShading\"", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"1", "-", 
                   RowBox[{"Rescale", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.9`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "&"}], ")"}]}],
            ",", 
           RowBox[{"\"OpacityFunctionTicks\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "\"0\""}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0.9`", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "\"\[Infinity]\""}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"\"OpacityFunctionSize\"", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.5`", "]"}]}], ",", 
           RowBox[{"\"OpacityFunctionRange\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"Charting`TickLabels", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.`", ",", "0.25`", ",", "0.5`", ",", "0.75`", ",", 
                    "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["1", "20"], ",", 
                    FractionBox["1", "10"], ",", 
                    FractionBox["3", "20"], ",", 
                    FractionBox["1", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "5"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "10"], ",", 
                    FractionBox["7", "20"], ",", 
                    FractionBox["2", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["2", "5"], ",", 
                    FractionBox["9", "20"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["11", "20"], ",", 
                    FractionBox["3", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["3", "5"], ",", 
                    FractionBox["13", "20"], ",", 
                    FractionBox["7", "10"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["4", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    FractionBox["17", "20"], ",", 
                    FractionBox["9", "10"], ",", 
                    FractionBox["19", "20"], ",", "1"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8007562194645367`*^9, 3.800756239207136*^9}, {
  3.8007564014105515`*^9, 3.8007564215496244`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"099001a2-e314-4be8-9125-b6e634ce6237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"frame", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"ReImPlot", "[", 
    RowBox[{
     RowBox[{"\[Gamma]", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", " ", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"frame", "[", "t", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"RefreshRate", " ", "\[Rule]", " ", "30"}], ",", " ", 
   RowBox[{"AnimationRate", " ", "\[Rule]", " ", "0.15"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.800756340635919*^9, 3.800756375457605*^9}, {
  3.800756430542385*^9, 3.8007564314331665`*^9}, {3.8007564753924136`*^9, 
  3.800756498107126*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"fb431e60-035c-47dc-a958-4b79f297b6f5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 5.42212264260281, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 4 Pi}}, Typeset`size$$ = {
    442., {115., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`frame[$CellContext`t$$], 
      "Specifications" :> {{$CellContext`t$$, 0, 4 Pi, RefreshRate -> 30, 
         AnimationRate -> 0.15, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{493., {154., 160.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.800756366213931*^9, 3.800756376264984*^9}, 
   3.8007564319165893`*^9, {3.800756481578513*^9, 3.8007564986172104`*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"786ecd53-84ae-4e61-9480-07346b3746fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problems", "Subsection",
 CellChangeTimes->{{3.800756556044048*^9, 
  3.8007565647284207`*^9}},ExpressionUUID->"b8eddb4c-3908-4906-9465-\
8715c2e47f3e"],

Cell[CellGroupData[{

Cell["Problem 2.10", "Subsubsection",
 CellChangeTimes->{{3.8007565701880817`*^9, 3.8007566151791716`*^9}, {
  3.8007566943476315`*^9, 3.8007567054894466`*^9}, {3.800757519190007*^9, 
  3.800757525918626*^9}},ExpressionUUID->"68177353-8c12-416e-8356-\
f24ea555cb0f"],

Cell[TextData[{
 "a) Construct ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6018d0cc-b1fe-418f-ba3d-0bde8cd40bdc"]
}], "Text",
 CellChangeTimes->{
  3.800757523765726*^9},ExpressionUUID->"6e922d81-3d92-42cb-95fd-\
80fabf6ce9e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", "2", "]"}], " ", "//", " ", "FullSimplify"}]], "Code",
 CellChangeTimes->{{3.800756593577795*^9, 3.8007565945771437`*^9}, {
  3.800756699644927*^9, 3.8007567399298267`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"6b9f317a-8f12-48c0-9da2-f8b540488225"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox["x", "2"], " ", "\[Omega]"}], 
      RowBox[{"2", " ", "\[HBar]"}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "m", " ", 
      SuperscriptBox["x", "2"], " ", "\[Omega]"}], "-", "\[HBar]"}], ")"}], 
   " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"], ")"}], 
    RowBox[{"1", "/", "4"}]]}], 
  RowBox[{
   SqrtBox["2"], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"1", "/", "4"}]], " ", "\[HBar]"}]]], "Output",
 CellChangeTimes->{{3.800756733831821*^9, 3.800756740513636*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"9880e0c2-3211-403e-a897-b54b0bc9eac3"]
}, Open  ]],

Cell[TextData[{
 "b) Sketch ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "0"], ",", " ", 
    SubscriptBox["\[Psi]", "1"], ",", " ", 
    SubscriptBox["\[Psi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "22f218e9-0a2d-4131-bffd-cdb4a117c266"]
}], "Text",
 CellChangeTimes->{{3.8007567492201567`*^9, 
  3.800756780553513*^9}},ExpressionUUID->"69fcd092-00e9-4517-90e8-\
017e7ca61354"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ps0", "[", "x_", "]"}], ",", " ", 
     RowBox[{"ps1", "[", "x_", "]"}], ",", " ", 
     RowBox[{"ps2", "[", "x_", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{"FixConstants", " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{"p0", ",", " ", 
      RowBox[{"\[Psi]", "[", "1", "]"}], ",", " ", 
      RowBox[{"\[Psi]", "[", "2", "]"}]}], "}"}]}]}], " "}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ps0", "[", "x", "]"}], ",", " ", 
     RowBox[{"ps1", "[", "x", "]"}], ",", " ", 
     RowBox[{"ps2", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "4"}], ",", " ", "4"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Psi]", "0"], ",", " ", 
      SubscriptBox["\[Psi]", "1"], ",", " ", 
      SubscriptBox["\[Psi]", "2"]}], "}"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.800756795294574*^9, 3.800757041797885*^9}, {
  3.8007570751444*^9, 3.8007571529931173`*^9}, {3.800757228257703*^9, 
  3.8007573108675823`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"67f1da28-ffcc-4653-8599-c925616208a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]], ",", 
   RowBox[{
    SqrtBox["2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}]], " ", "x"}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]}], ")"}]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.800757043017501*^9, {3.8007571209232273`*^9, 3.800757153727702*^9}, 
   3.8007572387488017`*^9, 3.8007572818596*^9, 3.800757312145694*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"d0c5b14e-eacd-4966-94a4-540ad75d0700"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$491117#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnk4Vd/3x82ze9EgPokkCiFRKawTkhIVJZFMkTIkRRGZIpmSJEkyRELm
edqHJHOUypR5uvcYrlmI3/0+z++fc5/Xs99n77XXe6297x9nt9VtAxsmBgaG
6/TH/37lYDt1c5OM5w0Xv7QUNEe3/+4J+rtKxr0FtS9PWZijnPyDkvOLZHwr
e1ejUIY5UtynZzVGkPGlHVf6M8Us0BH+x93Nv8n44cLQJ81lFggbnm18nU3G
w7++I/+3aYl8327avUgn4xxvfRUO7bdCNZd52cNSyHgW759tqYZWSKt5n6bP
GzLevc5Ei/9ohU4XmpfbPiHj6l3zzrQr1sjgSUvGIXMyzh575m9e83X04kTP
6QMmZBz7ZhfSvH4ddaxNjEteIuNXbTddzh6wQUbOLBLCumRcJFj7gt8zG2R6
5XgcwxEyXrbrzHKPsS26LvMxtIVExom7ht4rmzfQ/W+PHW9UkfAQyXD+tBR7
FEq4/V4oIeEXq/XHbSn2KIn95gm/fBIuXhLUUHnAATWD3ra3aSScXVzT9WiJ
AxLP2Vb5PZKEv5nykvLvcEStEak86jdIeNOU19nqbc5oJDPGrcmShMsffxKZ
ruqM/tYHDxhfJeHpodZdFGtnJMF4u+DuBRJOKWHidcx3Rh53jlz9eJy+flAk
HmN0B0ka1Gds5SPhd6VqY3dluSBVp7JtSVwkXPBg35XSbhd0ITjTW56VhCtY
uUsVst9FnjURhmdWeXGpKKmu71Z30XfFK2veI7x40NfDWuUi95DXFuoZooQX
PyKnFEhJdUUdHdzUakte3A/IKSd53JHv9cKqjKu8+L3hw9+SNNyR3MK1Fy8v
8+LJpMWxW+7uKGhLnupNPV68avQFUp9wR2oGxs/4VHjxbdPCzpxNHij123sl
cz5efLwsb7ktxRMZmutznubmxafdD11THvZEDDPLfxTZeHFl2ZiPfLu9kAlJ
9wnbOg/eY0Pil4/3QmS92a5P4zy4x9k/urvjH6EHjWre61U8OHfweZF6Ex+0
12TccKyUB39j2/jM0ssHfadE7Gsr4MEZ9hUtqSb4IFnOkfbkdB58IPv6pfIx
HzR4KlhCN5oHN/FNNxty80VnvvxqeO3Ig98zicw4/t4PieC3tx7ZyYPf+pgZ
d/pwAGoWUL53TJAHP0nRoolbBiAPm9UfagI8+M9rw7WnQwPQL66AF1ocPLjk
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
2Gzsk7zSm+bw/9+LYf//vRj8H8VTnSM=
          "]]}, Annotation[#, "Charting`Private`Tag$491117#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
srvuMXw2gkiip/P0h1vRWt7DLos3I+jB1fTOj9CKRo4p57BUjiAtyq1tIYxm
tGB+zffWyggan/6bJO3UiB7X+ZwtdxxFIuFiBb9FG9HmK9b+t91HkZ6CfnVk
awNSG+NBy8GjqOxeAYUh3YC49C1ReOooCqa5SDdT6pCvt0pHR+8okt7AKLQ3
rUEdPt99HipTkEWKdO1unhpkFzbQ+kyDgiI1TXu+lVWjiyLXnR6fpyBGQAXt
2NZqZCpYb9JhRUHNvF7qfB1f0GykrpZbCAWxZOfq4l5f0IwcX61qFAUp6Q5a
ush9QVs9r421JFBQfLiG789QHBFOWI1THgV9l+Z6diWsEh1YYORlfaMg7LZd
3peJzyj94iER0k8KSs9t6jxw5jM6d1X7+X+jFPRIKWwbY0MFsrx2SUt6gYKE
Twi+jX34EW29EShC2URlxnWvekNPGQrM3EqMbqeiP1VdlFuHy9BOEQ/Vst1U
VHH6pfSx6RLUFDAk/UOWisz1RYr6rxehFd/4hg2nqGhyflH1fk0hmtN4fttH
m4rcY9oQaV8hYodYousCFcX3+zZrUPMRV3GLGuMKFcl6mun3a+Wjo3sRo9mC
ij6JKfe6vM9DZxctbZ2vU1FRc2fthY4ctOq5V0zdgYq6BAI6fCOzUW7VyBUr
Jyqav6j6q9gwC/UUh+00caEixcHEhZ09GShzOxJqdKMi/X2GLBdepqOvQx9P
gBcVOd3i4PO9/B41qTxpD/alotwFh73jfalo9q755vggKvqqKnZoZ3wKGlYs
Kb0eSkXTnt/UdM2TUd0118x/YVTEXxOg5SP6FqkelCHuhFPRZUGX1JsoEcXv
K7UviqSil/F9n75qJCC7i2ZyrVFU1COp8U2pJhY5nS2VLY+hoi357yditV6h
A6L4NbdXVGR4jLSBtTEa0UKaWgRiqSiy1mWH7bkXyHXyie3jOCpqv9Av39oa
jj7rrB0qi6ci0SK/8BtJT1Ga08u9TQlUFNeghxTfBSKR7q1Y3hsq2v5r1/R6
hi8yQq/9biVSkcxIt2qMuRvapR47SWOyJJ/TSznbu2i39PQj0yQq8u6S6tpZ
bY52Ha6XjmSyLPnXLfaDmqD2vWA9nsk9s76JArSbcMQxdtGNyTMX9s/dcX4A
eaLV5ENMdnuh1WSv5A1WY606Jcz51z0fxSUeegLXX5XmbWKy960sh2/SIWDe
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
          "]]}, Annotation[#, "Charting`Private`Tag$491117#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4, 4}, {-0.8577629371720781, 0.9999998104453803}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       SubscriptBox["\[Psi]", "0"], 
       SubscriptBox["\[Psi]", "1"], 
       SubscriptBox["\[Psi]", "2"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.800757043017501*^9, {3.8007571209232273`*^9, 3.800757153727702*^9}, 
   3.8007572387488017`*^9, 3.8007572818596*^9, 3.8007573124945884`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"34e5a01f-6dc0-462a-a4b0-1dc63d124ab4"]
}, Open  ]],

Cell[TextData[{
 "c) Check the orthogonality of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "0"], ",", " ", 
    SubscriptBox["\[Psi]", "1"], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["\[Psi]", "2"], " ", "by", " ", "explicit", " ", 
     "integration"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c18874e0-b632-41b9-874d-a9fa96ad3c77"]
}], "Text",
 CellChangeTimes->{{3.8007571854038067`*^9, 
  3.800757211703025*^9}},ExpressionUUID->"8896f700-abaa-48c8-b43b-\
d9298e6c4394"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"p0", " ", 
      RowBox[{"\[Psi]", "[", "1", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
    "]"}], ",", " ", "\n", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"p0", " ", 
      RowBox[{"\[Psi]", "[", "2", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
    "]"}], ",", " ", "\n", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", "1", "]"}], " ", 
      RowBox[{"\[Psi]", "[", "2", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
    "]"}]}], "}"}]], "Code",
 CellChangeTimes->{{3.8007573282653933`*^9, 3.80075734660075*^9}, {
  3.8007574152000837`*^9, 3.8007575020620427`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"f85e42ef-98c6-422d-be16-d92636b8c6bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8007573500713835`*^9, {3.800757397017602*^9, 3.8007574306410027`*^9}, {
   3.8007574704972196`*^9, 3.80075750374306*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"edd71003-f8a7-4ee7-a74b-3e0eec6b8aa9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2.11", "Subsubsection",
 CellChangeTimes->{{3.800757532140457*^9, 
  3.8007575432466574`*^9}},ExpressionUUID->"949c058f-7d80-4ab7-99d1-\
656a5c496e08"],

Cell[TextData[{
 "a) Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", "x"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b5cb93cd-b208-4f16-8cb2-f79947094347"],
 "\[RightAngleBracket], ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", "p"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cd72d21b-eb7b-4ac9-a328-c8cf5bd58cc8"],
 "\[RightAngleBracket], ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["x", "2"], "\[RightAngleBracket]"}], ",", " ", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["p", "2"], "\[RightAngleBracket]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a7390422-4107-4438-a72a-f59d75d6517b"],
 " for the states ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Psi]", "0"], " ", "and", " ", 
    SubscriptBox["\[Psi]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2c413e49-183b-4a55-81e1-eac598a8b105"],
 "\nFirst we compute for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7079df02-0e3e-4e65-b46b-f88d30a60e73"]
}], "Text",
 CellChangeTimes->{{3.8007575483590417`*^9, 3.800757583446539*^9}, {
  3.800757629973814*^9, 3.8007577237011113`*^9}, {3.8007583053393946`*^9, 
  3.8007583147254343`*^9}},ExpressionUUID->"177a8072-a803-4ce3-a26a-\
7ba4415a6a8f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[CapitalEpsilon]x", "0"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], " ", "x", " ", 
     RowBox[{"\[Psi]", "[", "0", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[CapitalEpsilon]p", "0"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], " ", 
     RowBox[{"pop", "[", 
      RowBox[{"\[Psi]", "[", "0", "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox[
   SuperscriptBox["\[CapitalEpsilon]x", "2"], "0"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], " ", 
     RowBox[{"x", "^", "2"}], " ", 
     RowBox[{"\[Psi]", "[", "0", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox[
   SuperscriptBox["\[CapitalEpsilon]p", "2"], "0"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "0", "]"}], " ", 
     RowBox[{"pop", "[", 
      RowBox[{"pop", "[", 
       RowBox[{"\[Psi]", "[", "0", "]"}], "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8007577283236494`*^9, 3.8007579941197*^9}, {
  3.800758029434286*^9, 3.8007580997162914`*^9}, {3.8007581851953278`*^9, 
  3.800758290723191*^9}, {3.8007583463518867`*^9, 3.800758351187888*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"807992e9-ccea-40fb-a7c1-4cb5daa98e99"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.800758405543973*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"a30ef26a-6de2-4265-b97e-f6b64ce939ce"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.800758405659936*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"e106be75-6664-455b-8b95-c51689d720e8"],

Cell[BoxData[
 FractionBox["\[HBar]", 
  RowBox[{"2", " ", "m", " ", "\[Omega]"}]]], "Output",
 CellChangeTimes->{3.8007584058178854`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"a3110c4b-c84a-4b47-85b1-97a266ddeb20"],

Cell[BoxData[
 FractionBox[
  RowBox[{"m", " ", "\[Omega]", " ", "\[HBar]"}], "2"]], "Output",
 CellChangeTimes->{3.8007584061247854`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"3afda2e0-9a76-4c05-ac79-910c5c163084"]
}, Open  ]],

Cell[TextData[{
 "Now we compute for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "011e4597-6ff2-49df-94ff-b467019493b2"]
}], "Text",
 CellChangeTimes->{{3.8007583220522203`*^9, 3.800758332836219*^9}, 
   3.8007584272919965`*^9, 
   3.800758458308009*^9},ExpressionUUID->"9f4eea04-50df-44fa-b415-\
a82fc61fee0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[CapitalEpsilon]x", "1"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], " ", "x", " ", 
     RowBox[{"\[Psi]", "[", "1", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[CapitalEpsilon]p", "1"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], " ", 
     RowBox[{"pop", "[", 
      RowBox[{"\[Psi]", "[", "1", "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox[
   SuperscriptBox["\[CapitalEpsilon]x", "2"], "1"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], " ", 
     RowBox[{"x", "^", "2"}], " ", 
     RowBox[{"\[Psi]", "[", "1", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox[
   SuperscriptBox["\[CapitalEpsilon]p", "2"], "1"], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", "1", "]"}], " ", 
     RowBox[{"pop", "[", 
      RowBox[{"pop", "[", 
       RowBox[{"\[Psi]", "[", "1", "]"}], "]"}], "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.8007583483317385`*^9, 3.80075840069291*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"8c8b7a39-ce11-4d8a-9874-6e03eb71b06a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8007578222087674`*^9, 3.8007578634334483`*^9, 3.8007579113675327`*^9, 
   3.8007579452762117`*^9, {3.8007579905613985`*^9, 3.800757994579547*^9}, {
   3.8007580431880536`*^9, 3.80075810021513*^9}, {3.8007582780574484`*^9, 
   3.800758291493309*^9}, 3.8007584015396357`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"3aa5db75-5399-4049-9c96-8f876ef014ae"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8007578222087674`*^9, 3.8007578634334483`*^9, 3.8007579113675327`*^9, 
   3.8007579452762117`*^9, {3.8007579905613985`*^9, 3.800757994579547*^9}, {
   3.8007580431880536`*^9, 3.80075810021513*^9}, {3.8007582780574484`*^9, 
   3.800758291493309*^9}, 3.800758401715579*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"d346cf87-9566-48d3-8fc8-613203a62481"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[HBar]"}], 
  RowBox[{"2", " ", "m", " ", "\[Omega]"}]]], "Output",
 CellChangeTimes->{
  3.8007578222087674`*^9, 3.8007578634334483`*^9, 3.8007579113675327`*^9, 
   3.8007579452762117`*^9, {3.8007579905613985`*^9, 3.800757994579547*^9}, {
   3.8007580431880536`*^9, 3.80075810021513*^9}, {3.8007582780574484`*^9, 
   3.800758291493309*^9}, 3.800758401820546*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"a67891a8-d79b-433c-a4c8-f3cca648a4a4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "m", " ", "\[Omega]", " ", "\[HBar]"}], "2"]], "Output",
 CellChangeTimes->{
  3.8007578222087674`*^9, 3.8007578634334483`*^9, 3.8007579113675327`*^9, 
   3.8007579452762117`*^9, {3.8007579905613985`*^9, 3.800757994579547*^9}, {
   3.8007580431880536`*^9, 3.80075810021513*^9}, {3.8007582780574484`*^9, 
   3.800758291493309*^9}, 3.8007584020764627`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"e5f9b58b-db18-40b7-b6a4-a93262f8748b"]
}, Open  ]],

Cell["b) Check the uncertainty principle for these states", "Text",
 CellChangeTimes->{{3.8007584853485003`*^9, 3.8007584983553157`*^9}, {
  3.800758541482336*^9, 
  3.8007585597883625`*^9}},ExpressionUUID->"ecd23a1d-a59d-4d42-94a0-\
73615efa3f48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Var", 
    RowBox[{"x", ",", "0"}]], " ", "=", " ", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[CapitalEpsilon]x", "2"], "0"], " ", "-", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["\[CapitalEpsilon]x", "0"], ")"}], "2"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Var", 
    RowBox[{"p", ",", "0"}]], " ", "=", " ", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[CapitalEpsilon]p", "2"], "0"], " ", "-", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["\[CapitalEpsilon]p", "0"], ")"}], "2"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SubscriptBox["Var", 
      RowBox[{"x", ",", "0"}]], " ", 
     SubscriptBox["Var", 
      RowBox[{"p", ",", "0"}]]}], "]"}], " ", "//", " ", "Simplify"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Var", 
    RowBox[{"x", ",", "1", " "}]], "=", " ", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[CapitalEpsilon]x", "2"], "1"], " ", "-", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["\[CapitalEpsilon]x", "1"], ")"}], "2"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Var", 
    RowBox[{"p", ",", "1"}]], " ", "=", " ", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["\[CapitalEpsilon]p", "2"], "1"], " ", "-", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["\[CapitalEpsilon]p", "1"], ")"}], "2"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{
    SubscriptBox["Var", 
     RowBox[{"x", ",", "1"}]], " ", 
    SubscriptBox["Var", 
     RowBox[{"p", ",", "1"}]]}], "]"}], " ", "//", " ", "Simplify"}]}], "Code",
 CellChangeTimes->{{3.8007585751074595`*^9, 3.8007588899699492`*^9}, {
  3.8007594170468855`*^9, 
  3.8007594284166355`*^9}},ExpressionUUID->"bdf33768-4e27-449b-a762-\
53e5d7416338"],

Cell[BoxData[
 FractionBox["\[HBar]", "2"]], "Output",
 CellChangeTimes->{
  3.8007587994065895`*^9, {3.8007588442779427`*^9, 3.800758890315516*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"5098a82a-070d-4448-8683-028ae11ff3d9"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[HBar]"}], "2"]], "Output",
 CellChangeTimes->{
  3.8007587994065895`*^9, {3.8007588442779427`*^9, 3.800758890335518*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"2b4e8b0f-9889-4e29-bb72-dc25bbd43942"]
}, Open  ]],

Cell[TextData[{
 "So we see that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "41e6d03d-70fa-42d2-9b2a-c4ffe88268da"],
 " has the minimum uncertainty\n\nc) Compute \[LeftAngleBracket]T\
\[RightAngleBracket] and \[LeftAngleBracket]V\[RightAngleBracket] for these \
states (Note: T is kinetic energy, V is potential energy)\nNote that we have \
\[LeftAngleBracket]T\[RightAngleBracket] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "m"}]], 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["p", "2"], "\[RightAngleBracket]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "637440f4-dec2-4045-9af8-d0a735c20c5d"],
 ", \[LeftAngleBracket]V\[RightAngleBracket] = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "97afcc41-515e-4d53-9265-c3a755310eff"],
 "k ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["x", "2"], "\[RightAngleBracket]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3616f0b1-6059-41ef-a572-a724e8c803c9"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    SuperscriptBox["\[Omega]", "2"], "m", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["x", "2"], "\[RightAngleBracket]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6a270385-1580-4c2d-b63f-c48b3b0ae4be"]
}], "Text",
 CellChangeTimes->{{3.800758896115459*^9, 3.800758919240923*^9}, {
  3.8007591078565083`*^9, 3.800759230825124*^9}, {3.8007592614083033`*^9, 
  3.8007593959757476`*^9}, {3.800759578591938*^9, 
  3.8007596121525893`*^9}},ExpressionUUID->"7635ae2c-4f84-43ba-9efa-\
3357b81cd89f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", "T", "\[RightAngleBracket]"}], "0"], " ", 
  "=", " ", 
  RowBox[{
   SubscriptBox[
    SuperscriptBox["\[CapitalEpsilon]p", "2"], "0"], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"2", "m"}], ")"}]}]}], "\n", 
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", "T", "\[RightAngleBracket]"}], "1"], " ", 
  "=", " ", 
  RowBox[{
   SubscriptBox[
    SuperscriptBox["\[CapitalEpsilon]p", "2"], "1"], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"2", "m"}], ")"}]}]}], "\n", 
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", "V", "\[RightAngleBracket]"}], "0"], " ", 
  "=", " ", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[Omega]", "2"], "m", " ", 
   SubscriptBox[
    SuperscriptBox["\[CapitalEpsilon]x", "2"], "0"]}]}], "\n", 
 RowBox[{
  SubscriptBox[
   RowBox[{"\[LeftAngleBracket]", "V", "\[RightAngleBracket]"}], "1"], " ", 
  "=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox["\[Omega]", "2"], "m", " ", 
   SubscriptBox[
    SuperscriptBox["\[CapitalEpsilon]x", "2"], "1"]}]}]}], "Code",
 CellChangeTimes->{{3.8007592431118345`*^9, 3.8007592548163986`*^9}, {
  3.800759404487837*^9, 3.800759564943121*^9}, {3.8007596354564075`*^9, 
  3.8007597375440598`*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"592a2f9f-71bb-494e-9ac3-8a39fb3ad76d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Omega]", " ", "\[HBar]"}], "4"]], "Output",
 CellChangeTimes->{{3.8007594649422584`*^9, 3.8007594866319804`*^9}, {
  3.8007595367871532`*^9, 3.8007595652310276`*^9}, {3.8007596656736994`*^9, 
  3.8007596685034113`*^9}, {3.8007597045526896`*^9, 3.8007597378006163`*^9}},
 CellLabel->
  "Out[253]=",ExpressionUUID->"2102c09e-d915-42d2-ac07-7f6ebc2b78fb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Omega]", " ", "\[HBar]"}], "4"]], "Output",
 CellChangeTimes->{{3.8007594649422584`*^9, 3.8007594866319804`*^9}, {
  3.8007595367871532`*^9, 3.8007595652310276`*^9}, {3.8007596656736994`*^9, 
  3.8007596685034113`*^9}, {3.8007597045526896`*^9, 3.80075973781861*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"d992ec55-3fc2-4da0-9b57-632a9e5f9d4a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Omega]", " ", "\[HBar]"}], "4"]], "Output",
 CellChangeTimes->{{3.8007594649422584`*^9, 3.8007594866319804`*^9}, {
  3.8007595367871532`*^9, 3.8007595652310276`*^9}, {3.8007596656736994`*^9, 
  3.8007596685034113`*^9}, {3.8007597045526896`*^9, 3.8007597378376055`*^9}},
 CellLabel->
  "Out[255]=",ExpressionUUID->"a0002669-7533-48e3-bb2e-9bff1482e7eb"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Omega]", " ", "\[HBar]"}], "4"]], "Output",
 CellChangeTimes->{{3.8007594649422584`*^9, 3.8007594866319804`*^9}, {
  3.8007595367871532`*^9, 3.8007595652310276`*^9}, {3.8007596656736994`*^9, 
  3.8007596685034113`*^9}, {3.8007597045526896`*^9, 3.800759737859597*^9}},
 CellLabel->
  "Out[256]=",ExpressionUUID->"b4b5010a-7598-4d4d-a3cf-8b16a45b4ee5"]
}, Open  ]],

Cell["And we see their sums are", "Text",
 CellChangeTimes->{{3.8007597548946676`*^9, 
  3.8007597598485074`*^9}},ExpressionUUID->"812616ff-0491-4297-9f3b-\
643827c32ec8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "T", "\[RightAngleBracket]"}], "0"], " ", 
   "+", " ", 
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "V", "\[RightAngleBracket]"}], "0"]}], " ",
   "//", " ", "Simplify"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "T", "\[RightAngleBracket]"}], "1"], " ", 
   "+", " ", 
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "V", "\[RightAngleBracket]"}], "1"]}], " ",
   "//", " ", "Simplify"}]}], "Code",
 CellChangeTimes->{{3.800759767415695*^9, 3.8007598188392043`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"01802c17-e526-4c70-8160-351591bac40d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Omega]", " ", "\[HBar]"}], "2"]], "Output",
 CellChangeTimes->{
  3.800759787876101*^9, {3.800759819602947*^9, 3.800759834496909*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"bb9a381a-375e-41b3-b4b6-824897250e8f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "\[Omega]", " ", "\[HBar]"}], "2"]], "Output",
 CellChangeTimes->{
  3.800759787876101*^9, {3.800759819602947*^9, 3.8007598345149035`*^9}},
 CellLabel->
  "Out[261]=",ExpressionUUID->"0dd2b8c6-07e7-43f3-b43d-30c94d4ad58b"]
}, Open  ]],

Cell[TextData[{
 "Which are ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "0"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ce00e84e-ecaa-4a99-93fa-68f742f02583"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9fecbef0-5870-49ab-9dfc-00d51c3bea37"],
 " respectively! So the sums of the expected potential and kinetic energies \
are exactly the total energy of the system. By linearity of expectation we \
actually get that \[LeftAngleBracket]T + V \[RightAngleBracket] = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "n"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2853c94c-ea89-4ec0-8884-2be0935b1370"],
 " here."
}], "Text",
 CellChangeTimes->{{3.8007598482860928`*^9, 3.800759999990265*^9}, {
  3.800760340212411*^9, 
  3.8007603454372487`*^9}},ExpressionUUID->"26322424-3db4-4e02-86e3-\
eac82c1abfc1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 899},
WindowMargins->{{Automatic, 259}, {Automatic, 92}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f29f2ed8-6163-4608-b978-63c469a9211c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 96, "Title",ExpressionUUID->"17df7a88-de31-41bc-a59a-6ba3ccf93162"],
Cell[747, 27, 179, 3, 53, "Subtitle",ExpressionUUID->"bcf7317d-5b6d-4136-af70-0a2f670d5b31"],
Cell[929, 32, 165, 3, 30, "Subsubtitle",ExpressionUUID->"c1dae2e9-c1ee-4af7-bce9-d5328bcb1f3a"],
Cell[1097, 37, 195, 3, 34, "Text",ExpressionUUID->"6f2624b4-d993-4cb9-9737-95f5b4514ef0"],
Cell[1295, 42, 4080, 109, 177, "Code",ExpressionUUID->"c09ce1ab-9d5b-44cc-bc61-fef199709b1a"],
Cell[5378, 153, 274, 5, 34, "Text",ExpressionUUID->"6f9e3aa8-9380-4b88-99ac-74822ba2f1b6"],
Cell[CellGroupData[{
Cell[5677, 162, 1474, 37, 94, "Code",ExpressionUUID->"02416396-69ef-4054-ab29-4933400a6915"],
Cell[7154, 201, 124280, 2142, 451, "Output",ExpressionUUID->"099001a2-e314-4be8-9125-b6e634ce6237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131471, 2348, 1175, 28, 69, "Code",ExpressionUUID->"fb431e60-035c-47dc-a958-4b79f297b6f5"],
Cell[132649, 2378, 2066, 41, 333, "Output",ExpressionUUID->"786ecd53-84ae-4e61-9480-07346b3746fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134752, 2424, 158, 3, 53, "Subsection",ExpressionUUID->"b8eddb4c-3908-4906-9465-8715c2e47f3e"],
Cell[CellGroupData[{
Cell[134935, 2431, 266, 4, 44, "Subsubsection",ExpressionUUID->"68177353-8c12-416e-8356-f24ea555cb0f"],
Cell[135204, 2437, 315, 10, 34, "Text",ExpressionUUID->"6e922d81-3d92-42cb-95fd-80fabf6ce9e9"],
Cell[CellGroupData[{
Cell[135544, 2451, 301, 5, 50, "Code",ExpressionUUID->"6b9f317a-8f12-48c0-9da2-f8b540488225"],
Cell[135848, 2458, 800, 24, 73, "Output",ExpressionUUID->"9880e0c2-3211-403e-a897-b54b0bc9eac3"]
}, Open  ]],
Cell[136663, 2485, 441, 13, 34, "Text",ExpressionUUID->"69fcd092-00e9-4517-90e8-017e7ca61354"],
Cell[CellGroupData[{
Cell[137129, 2502, 1246, 33, 69, "Code",ExpressionUUID->"67f1da28-ffcc-4653-8599-c925616208a6"],
Cell[138378, 2537, 917, 29, 68, "Output",ExpressionUUID->"d0c5b14e-eacd-4966-94a4-540ad75d0700"],
Cell[139298, 2568, 55025, 980, 242, "Output",ExpressionUUID->"34e5a01f-6dc0-462a-a4b0-1dc63d124ab4"]
}, Open  ]],
Cell[194338, 3551, 543, 15, 34, "Text",ExpressionUUID->"8896f700-abaa-48c8-b43b-d9298e6c4394"],
Cell[CellGroupData[{
Cell[194906, 3570, 1108, 31, 87, "Code",ExpressionUUID->"f85e42ef-98c6-422d-be16-d92636b8c6bc"],
Cell[196017, 3603, 312, 7, 32, "Output",ExpressionUUID->"edd71003-f8a7-4ee7-a74b-3e0eec6b8aa9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196378, 3616, 165, 3, 44, "Subsubsection",ExpressionUUID->"949c058f-7d80-4ab7-99d1-656a5c496e08"],
Cell[196546, 3621, 1482, 41, 58, "Text",ExpressionUUID->"177a8072-a803-4ce3-a26a-7ba4415a6a8f"],
Cell[CellGroupData[{
Cell[198053, 3666, 1959, 55, 107, "Code",ExpressionUUID->"807992e9-ccea-40fb-a7c1-4cb5daa98e99"],
Cell[200015, 3723, 153, 3, 32, "Output",ExpressionUUID->"a30ef26a-6de2-4265-b97e-f6b64ce939ce"],
Cell[200171, 3728, 153, 3, 32, "Output",ExpressionUUID->"e106be75-6664-455b-8b95-c51689d720e8"],
Cell[200327, 3733, 221, 5, 51, "Output",ExpressionUUID->"a3110c4b-c84a-4b47-85b1-97a266ddeb20"],
Cell[200551, 3740, 221, 5, 50, "Output",ExpressionUUID->"3afda2e0-9a76-4c05-ac79-910c5c163084"]
}, Open  ]],
Cell[200787, 3748, 398, 11, 34, "Text",ExpressionUUID->"9f4eea04-50df-44fa-b415-a82fc61fee0a"],
Cell[CellGroupData[{
Cell[201210, 3763, 1810, 53, 107, "Code",ExpressionUUID->"8c8b7a39-ce11-4d8a-9874-6e03eb71b06a"],
Cell[203023, 3818, 409, 7, 32, "Output",ExpressionUUID->"3aa5db75-5399-4049-9c96-8f876ef014ae"],
Cell[203435, 3827, 407, 7, 32, "Output",ExpressionUUID->"d346cf87-9566-48d3-8fc8-613203a62481"],
Cell[203845, 3836, 496, 10, 51, "Output",ExpressionUUID->"a67891a8-d79b-433c-a4c8-f3cca648a4a4"],
Cell[204344, 3848, 485, 9, 50, "Output",ExpressionUUID->"e5f9b58b-db18-40b7-b6a4-a93262f8748b"]
}, Open  ]],
Cell[204844, 3860, 248, 4, 34, "Text",ExpressionUUID->"ecd23a1d-a59d-4d42-94a0-73615efa3f48"],
Cell[CellGroupData[{
Cell[205117, 3868, 1880, 60, 180, "Code",ExpressionUUID->"bdf33768-4e27-449b-a762-53e5d7416338"],
Cell[207000, 3930, 232, 5, 50, "Output",ExpressionUUID->"5098a82a-070d-4448-8683-028ae11ff3d9"],
Cell[207235, 3937, 255, 6, 50, "Output",ExpressionUUID->"2b4e8b0f-9889-4e29-bb72-dc25bbd43942"]
}, Open  ]],
Cell[207505, 3946, 1827, 48, 106, "Text",ExpressionUUID->"7635ae2c-4f84-43ba-9efa-3357b81cd89f"],
Cell[CellGroupData[{
Cell[209357, 3998, 1385, 41, 148, "Code",ExpressionUUID->"592a2f9f-71bb-494e-9ac3-8a39fb3ad76d"],
Cell[210745, 4041, 393, 7, 50, "Output",ExpressionUUID->"2102c09e-d915-42d2-ac07-7f6ebc2b78fb"],
Cell[211141, 4050, 400, 7, 50, "Output",ExpressionUUID->"d992ec55-3fc2-4da0-9b57-632a9e5f9d4a"],
Cell[211544, 4059, 393, 7, 50, "Output",ExpressionUUID->"a0002669-7533-48e3-bb2e-9bff1482e7eb"],
Cell[211940, 4068, 401, 7, 50, "Output",ExpressionUUID->"b4b5010a-7598-4d4d-a3cf-8b16a45b4ee5"]
}, Open  ]],
Cell[212356, 4078, 171, 3, 34, "Text",ExpressionUUID->"812616ff-0491-4297-9f3b-643827c32ec8"],
Cell[CellGroupData[{
Cell[212552, 4085, 690, 19, 71, "Code",ExpressionUUID->"01802c17-e526-4c70-8160-351591bac40d"],
Cell[213245, 4106, 258, 6, 50, "Output",ExpressionUUID->"bb9a381a-375e-41b3-b4b6-824897250e8f"],
Cell[213506, 4114, 270, 6, 50, "Output",ExpressionUUID->"0dd2b8c6-07e7-43f3-b43d-30c94d4ad58b"]
}, Open  ]],
Cell[213791, 4123, 957, 26, 56, "Text",ExpressionUUID->"26322424-3db4-4e02-86e3-eac82c1abfc1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

